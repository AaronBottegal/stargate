	TTL	<<<<<  S T A R G A T E  >>>>>
*
*SCANNING PROCESS
*MAINTAINANCE OF ACTIVE,INACTIVE OBJECT LISTS
*SCANNER DISPLAY
*
SCPROC	JSR	ISCAN
	NAP	2,SCP1
SCP1	JSR	OSCAN
	JSR	SHSCAN
	NAP	2,SCP2
SCP2	JSR	SCNR
	NAP	4,SCPROC
*
*SCAN ACTIVE OBJECTS FOR OFF SCREEN AREA
*
OSCAN	LDD	BGL
	SUBD	#100*32
	STD	XTEMP
	LDX	#OPTR
	BRA	OSCLP
OSC1	LDD	OX16,X
	SUBD	XTEMP
	CMPD	#500*32
	BLO	OSCLP	IN SCREEN AREA
	LDU	OLINK,X	NO,MOVE TO INACTIVE LIST
	STU	,Y
	LDU	IPTR
	STU	OLINK,X
	STX	IPTR
	LEAX	,Y	X TO NEXT
OSCLP	LEAY	,X
	LDX	,X
	BNE	OSC1
	RTS
*
*SCAN INACTIVE OBJECTS FOR ON SCREEN
*
ISCAN	LDD	BGL
	SUBD	#100*32	100 PIXEL LEFT BUFFER
	STD	XTEMP
	LDX	#IPTR
	BRA	ISCLP
ISC1	LDA	STATUS	OBJECTS ACTIVE??
	BITA	#$20
	BNE	SCYV5	NOPE....NO VELOCITY STUFF...JUST CHECK IF ACTIVE
	LDD	OYV,X
	ASLB
	ROLA
	ASLB
	ROLA
	ASLB
	ROLA
	ADDD	OY16,X
	CMPA	#YMIN	WRAP AROUND
	BHS	SCYV3
	CMPA	#(YMIN/2)+(YMAX/2)-$80
	BLS	SCYV6
	LDA	#YMAX
SCYV3	CMPA	#YMAX
	BLS	SCYV4
SCYV6	LDA	#YMIN
SCYV4	STD	OY16,X	ADD 8 TIMES VELOCITY
	LDD	OXV,X	UPDATE X POSITION
	ASLB
	ROLA
	ASLB
	ROLA
	ASLB
	ROLA
	ADDD	OX16,X
	STD	OX16,X
SCYV5	LDD	OX16,X	RELOAD IN CASE WE GET HERE BY BRANCH
	SUBD	XTEMP
	CMPD	#500*32	IN SCREEN AREA
	BHS	ISCLP	NO
	LDU	OLINK,X	YES, TRANSFER TO ACTIVE
	STU	,Y
	LDU	OPTR
	STU	OLINK,X
	STX	OPTR
	CLRA		MAKE SURE OFF SCREEN AFTER HYPER
	CLRB
	STD	OBJX,X
	LEAX	,Y
ISCLP	LEAY	,X
	LDX	,X
	BNE	ISC1
	RTS
*
*
*SCANNER
*OFF OLDE BOZOS+PLAYER
SCNR	LDU	#0
	LDB	#8
	LDX	#SETAB
SCNR0	STU	[,X]
	STU	[2,X]
	STU	[4,X]
	STU	[6,X]
	ABX
	CMPX	SETEND
	BLO	SCNR0
*OFF PLAYER +
	LDX	[SETEND]
	BEQ	MT1
	STU	,X
	CLR	2,X
	STU	-$100,X
*OUTPUT TERRAIN
MT1	LDD	BGL	CALC SCANL
	SUBD	#$8000-(150*32)
	STD	XTEMP
	LSRA
	LSRA		GET 6 BITS
	LDU	#MTERR
	LDB	#3
	MUL
	LEAU	D,U	GET ADDR
	LDA	STATUS
	BITA	#2	NO TERRAIN???
	BNE	MTX	NONE
	LDA	#SCANER!>8
	LDY	#STETAB	ERASE TABLE
MTLP	LDX	#0
	STX	[,Y]	OFF OLD
	PULU	B,X
	STD	,Y	SAVE NEW ADDR
	STX	[,Y++]
	INCA
	LDX	#0
	STX	[,Y]
	PULU	B,X
	STD	,Y
	STX	[,Y++]
	INCA
	CMPA	#(SCANER!>8)+64
	BNE	MTLP
*SCANNER BEZEL
MTX	LDX	#SCANER+$1C00
	LDD	#$9090
	STD	,X
	STD	26,X
	LDX	#SCANER+$2300
	LDD	#$0909
	STD	,X
	STD	26,X
*OUTPUT BOZOS
	JMP	PACH1	****************THIS IS A PATCH*********
*LDX #OPTR THIS USED TO BE HERE
BOZ1	LDU	#SETAB	ERASE TABLE
	BSR	SCNR3
	LDX	#IPTR
	BSR	SCNR3
BOZ2	STU	SETEND	END OF ERASE TABLE
*PLAYER BLIP OUTPUT
	LDD	PLAXC
	LSRA
	LSRA
	LSRA
	LSRA
	LSRB
	LSRB
	LSRB
	ADDD	#$4700+SCANH-5 PLAYER BASE
	STD	,U
	LDX	,U
	LDD	#$9099
	STD	,X
	STA	2,X
	LDA	#$09
	STA	-$FF,X
	RTS
*BLIP SCAN SUBROUTINE
SCNR10	LDD	OX16,X	FIND OFFSET
	SUBD	XTEMP	SUBTRACT SCANNER LEFT
SCNR2	LSRA		SHIFT DOWN TO 6 BITS
	LSRA
	LDB	OY16,X
	LSRB
	LSRB
	LSRB
	ADDD	#SCANER-5
	STD	,U
	LDD	OBJCOL,X STORE BLIP
	CMPA	#$1F	STAR GATE?
	BNE	SCNR20	NO
	LDD	,U
	CMPA	#SCANER!>8+$3F CLIP GATE AT LIMIT
	BNE	SCNR2A
	DECA
	STA	,U
SCNR2A	LDY	#$FFF0
	STY	[,U++]
	INCB
	STD	,U
	LDY	#$F0FF
	STY	[,U++]
	INCA
	STD	,U
	LDY	#$F0F0
	STY	[,U++]
	DECB
	STD	,U
	STY	[,U++]
	BRA	SCNR3
SCNR20	STD	[,U++]
SCNR3	LDX	,X	DO THE REST
	BNE	SCNR10
	RTS
*
*MINI TERRAIN DATA TABLE
*
MTERR	FCB	27,$08,$80,26,$80,$08,28,$80,$08,30,$80,$08
	FCB	31,$88,$00,31,$88,$00,30,$88,$00,28,$88,$00
	FCB	26,$88,$00,28,$88,$00,30,$88,$00,31,$80,$08
	FCB	32,$88,$00,32,$88,$00,31,$88,$00,30,$88,$00
	FCB	28,$08,$80,28,$88,$00,29,$80,$08,31,$88,$00
	FCB	31,$88,$00,31,$02,$20,31,$22,$00,31,$02,$20
	FCB	30,$22,$00,31,$22,$00,30,$02,$20,28,$02,$20
	FCB	26,$02,$20,28,$20,$02,29,$02,$20,28,$02,$20
	FCB	25,$02,$20,22,$02,$20,24,$20,$02,27,$20,$02
	FCB	29,$20,$02,31,$20,$02,31,$22,$00,31,$22,$00
	FCB	31,$20,$02,32,$22,$00,31,$0B,$B0,29,$0B,$B0
	FCB	28,$BB,$00,30,$BB,$00,30,$0B,$B0,27,$0B,$B0
	FCB	29,$B0,$0B,31,$0B,$B0,32,$BB,$00,31,$0B,$B0
	FCB	31,$B0,$0B,31,$BB,$00,31,$B0,$0B,32,$BB,$00
	FCB	31,$0B,$B0,31,$B0,$0B,31,$BB,$00,31,$0B,$B0
	FCB	31,$BB,$00,31,$BB,$00,30,$0B,$B0,29,$0B,$B0
	FCB	27,$08,$80,26,$80,$08,28,$80,$08,30,$80,$08 REPEAT
	FCB	31,$88,$00,31,$88,$00,30,$88,$00,28,$88,$00
	FCB	26,$88,$00,28,$88,$00,30,$88,$00,31,$80,$08
	FCB	32,$88,$00,32,$88,$00,31,$88,$00,30,$88,$00
	FCB	28,$08,$80,28,$88,$00,29,$80,$08,31,$88,$00
	FCB	31,$88,$00,31,$02,$20,31,$22,$00,31,$02,$20
	FCB	30,$22,$00,31,$22,$00,30,$02,$20,28,$02,$20
	FCB	26,$02,$20,28,$20,$02,29,$02,$20,28,$02,$20
	FCB	25,$02,$20,22,$02,$20,24,$20,$02,27,$20,$02
	FCB	29,$20,$02,31,$20,$02,31,$22,$00,31,$22,$00
	FCB	31,$20,$02,32,$22,$00,31,$0B,$B0,29,$0B,$B0
	FCB	28,$BB,$00,30,$BB,$00,30,$0B,$B0,27,$0B,$B0
	FCB	29,$B0,$0B,31,$0B,$B0,32,$BB,$00,31,$0B,$B0
	FCB	31,$B0,$0B,31,$BB,$00,31,$B0,$0B,32,$BB,$00
	FCB	31,$0B,$B0,31,$B0,$0B,31,$BB,$00,31,$0B,$B0
	FCB	31,$BB,$00,31,$BB,$00,30,$0B,$B0,29,$0B,$B0
*
*WRITE AN OBJECT TO SCREEN
*Y=OBJECT DESCRIPTOR ADDR
*D=SCREEN ADDR
*ALL SAVED
*REENTRANT
*
CWRIT	PSHS	A,B,X,Y,U
	TFR	D,X
	LDD	OBJW,Y	GET WIDTH,LENGTH
	LDY	OBJP0,Y	GET DATA
	PSHS	D	SAVE WIDTH,HEIGHT
	BITB	#1	ODD LENGTH?
	BNE	CWRT1
*EVEN BYTE COUNT
CWRT00	SUBB	#2
CWRT0	LDU	B,Y
	STU	B,X
	SUBB	#2
	BPL	CWRT0
	LDB	1,S
	LEAX	$100,X
	LEAY	B,Y
	DECA
	BNE	CWRT00
	BRA	CWRTX
*ODD BYTE COUNT
CWRT1	DECB
	LDA	B,Y
	STA	B,X
	SUBB	#2
	BMI	CWRT3
CWRT2	LDU	B,Y
	STU	B,X
	SUBB	#2
	BPL	CWRT2
CWRT3	LDB	1,S	GET HEIGHT
	LEAX	$100,X
	LEAY	B,Y
	DEC	,S	DEC WIDTH
	BNE	CWRT1
CWRTX	LEAS	2,S	GET MAP +2 PHONIES
	PULS	A,B,X,Y,U,PC
*
*COFF
*Y=OBJECT DESCRIPTOR ADDR
*D=SCREEN ADDR
*
COFF	PSHS	A,B,X,U
	TFR	D,X
	LDD	OBJW,Y	GET WIDTH ,HEIGHT
COFFA	LDU	#0
	PSHS	B	SAVE HT
	BITB	#1	ODD LENGTH?
	BNE	COFF1	YES
*EVEN BYTE COUNT
COFF00	SUBB	#2
COFF0	STU	B,X
	SUBB	#2
	BPL	COFF0
	LDB	,S	GET HT
	LEAX	$100,X
	DECA
	BNE	COFF00
	BRA	COFFX
*ODD BYTE COUNT
COFF1	DECB
	CLR	B,X
	SUBB	#2
	BMI	COFF3
COFF2	STU	B,X
	SUBB	#2
	BPL	COFF2
COFF3	LDB	,S	GET HT
	LEAX	$100,X
	DECA
	BNE	COFF1
COFFX	LEAS	1,S	PULL HEIGHT
	PULS	A,B,X,U,PC
*
*BLOCK CLEAR
*X=ADDR, D=W,H
*
BLKCLR	PSHS	A,B,X,U
	BRA	COFFA
*
*SCREEN CLEAR
*
SCRCLR	PSHS	D,X,Y,U
	LDU	#$9C00
	LDX	#0
	TFR	X,Y
	TFR	X,D
SCLRLP	PSHU	X,Y,D
	PSHU	X,Y,D
	PSHU	X,Y,D
	PSHU	X,Y,D
	PSHU	X,Y,D
	PSHU	X	32 AT A CRACK
	CMPU	#0
	BNE	SCLRLP
	PULS	D,X,Y,U,PC
*
*CLEAR ACTIVE SCREEN
*
SCLR1	PSHS	D,X,Y,U,DP
	LDU	#$9C00
	LDX	#0
	TFR	X,Y
	TFR	X,D
	TFR	A,DP
SC0LP	LDB	#8
SC1LP	PSHU	X,Y,A,DP
	PSHU	X,Y,A,DP
	PSHU	X,Y,A,DP
	PSHU	X,Y,A,DP
	DECB
	BNE	SC1LP
	PSHU	X,Y,A,DP
	PSHU	X,Y,A,DP
	PSHU	X,Y,A,DP
	PSHU	X
	LEAU	-YMIN,U
	CMPU	#0
	BNE	SC0LP
	PULS	D,X,Y,U,DP,PC
*
* CMOS PRIMITIVE FOR READING
*
RCMOSA	EQU	*
RCMOS	LDA	1,X	GET LSB
	ANDA	#$0F	LEAVE ONLY LS
	PSHS	A	SAVE IT
	LDA	,X++	GET MSB + AUTO INC
	ASLA
	ASLA
	ASLA
	ASLA		SHIFT LS TO MSB
	ADDA	,S+	GET LSB + FIX STACK
DRTS	RTS		BYE
*
* READ CMOS INTO D POINTED TO BY X: A=X,X+1; B=X+2,X+3
*
RCMOSD	BSR	RCMOSA	GET THE FIRST BYTE+FALL THRU FOR 2ND
*
* READ CMOS INTO B POINTED TO BY X
*
RCMOSB	PSHS	A	SAVE A
	BSR	RCMOSA	GET IN A
	TFR	A,B	PUT IT IN B
	PULS	A,PC	DONE
*
* WRITE TO CMOS PRIMITIVE
*
WCMOSA	EQU	*
WCMOS	PSHS	A	SAVE WHATS TO BE WRITTEN
	STA	1,X	SAVE LSB
	LSRA	SHIFT	MS TO LS
	LSRA
	LSRA
	LSRA
	STA	,X++	SAVE MSB AND AUTO INC
	PULS	A,PC	DONE
*
* WRITE CMOS FROM D TO X: A=X,X+1; B=X+2,X+3
*
WCMOSD	BSR	WCMOSA	DO IT AND FALL THRU FOR 2ND
*
* WRITE CMOS FROM B TO X
*
WCMOSB	PSHS	A	SAVE A
	TFR	B,A	MOVE B TO A
	BSR	WCMOSA	FAKE IT
	PULS	A,PC	DONE
*
*
*
*SCORE ROUTINE
*A=0-7EXP,B=0-99
*
*SCORE PSHS A,B,X,U,Y
* ORCC #1 SET CARRY
SCORE	JMP	SCRPCH	*****************NO SCORE IN ATTR
	NOP		***********************************************
	ROL	SCRFLG	SET FLAG
	LSRA
	PSHS	A
	LDA	#0
	BCC	SCR1
	ASLB
	ROLA
	ASLB
	ROLA
	ASLB
	ROLA
	ASLB
	ROLA
SCR1	JSR	PLINDX
	STD	XTEMP
	LDB	#3
	SUBB	,S+
	LDA	B,X
	ADDA	XTEMP+1
	DAA
	STA	B,X
	DECB
	BMI	SCRX
SCR2	LDA	B,X
	ADCA	XTEMP
	DAA
	STA	B,X
	LDA	#0
	STA	XTEMP
	DECB
	BPL	SCR2
*CHECK REPLAY
SCRX	LDD	REPLA	REPLAYS AVAILABLE
	BEQ	SCRXX	NO
	LEAY	4,X
	BSR	RCHK
	BLO	SCRXX	NO
	LDA	2,Y	GET NEXT LEVEL
	ADDA	REPLA+1
	DAA
	STA	2,Y
	LDA	1,Y
	ADCA	REPLA
	DAA
	STA	1,Y
	LDA	,Y
	ADCA	#0
	DAA	DUMB	ASSHOLE ASSOCIATION
	STA	,Y
	JSR	RPHK	GO TO YOUR REPLAY HOOK
	JSR	LDISPV	REWARD
	JSR	SBDSPV
	LDD	#RPSND
	JSR	SNDLD
	LDB	#5
	JSR	AUD1
SCRXX	BSR	SCRTRN
	PULS	A,B,X,U,Y
	RTS
*
*REPLAY CHECK
*X=PLAYER SCORE MSB 8 DIGITS
*Y=REPLAY LEVEL MSB 8 DIGITS
*RETURNS CC FOR PSCOR-RLEVL
RCHK	PSHS	D
	LDD	,X
	CMPD	,Y
	BNE	RCHX
	LDD	2,X
	CMPD	2,Y
RCHX	PULS	D,PC
*
*SCORE TRANSFER
*
SCRTRN	LDA	SAMEXC	TERRAIN BLOW UP OR WARP IN EFFECT??
	BEQ	SCTR0
	RTS
SCTR0	LDA	CURPLR
SCRTR0	LDX	#N0V
	LDB	STATUS
	BMI	SCT0
	CMPA	CURPLR
	BNE	SCT0
	LDX	#N0AV
SCT0	PSHS	A,X
	DECA
	BNE	SCT1
	LDX	#P1DISP
	LDU	#.P1SCR
	BRA	SCT2
SCT1	LDX	#P2DISP
	LDU	#.P2SCR
SCT2	CLR	XTEMP	BLANKING FLAG
	LDB	#7
SCTLP	LDA	,U+	GET
	LDY	1,S	GET BASE OF CHARSTORAGE
	BITB	#1	PHASE
	BNE	SCT3
	LEAU	-1,U
	LSRA
	LSRA
	LSRA
	LSRA
SCT3	ANDA	#$F
	BNE	SCT3A
	CMPB	#2	LAST 2
	BLS	SCT3A
	TST	XTEMP	BLANKING?
	BEQ	SCT4
SCT3A	INC	XTEMP
	ASLA
	ASLA
	LEAY	A,Y
	EXG	X,D
	JSR	CWRIT	ON DIGIT PICTURE
SCT40	EXG	X,D
SCT4	LEAX	DIGLTH,X
	DECB
	BNE	SCTLP	DO THE REST
	PULS	A,Y,PC
*
*SCREEN SWITCHING
*
P1SW	PSHS	D,X	SAVE REGISTERS
P1SW0	LDX	#IRQ
	LDD	#$013C
	BRA	PSW1
P2SW	PSHS	D,X	SAVE REGISTERS
	LDA	PIA3	COCKTAIL?
	BPL	P1SW0	NO
	LDX	#IRQB	SWITCH UPSIDE DOWN GUYS
	LDD	#$0334
PSW1	STX	IRQHK+1	IRQ SELECT
	STB	PIA3+1
	STA	RWCNTL
	LDA	#$7E
	STA	IRQHK
	PULS	D,X,PC
*
*CHECK FOR PROCESS EXISTANCE
*Y=PADDR OF SUSPECT
*RET EQ IF FOUND, NE IF NOT THERE
*
PCHEK	PSHS	X
	LDX	ACTIVE
	BEQ	PCHK2
PCHK1	CMPY	PADDR,X
	BEQ	PCKBYE
	LDX	,X
	BNE	PCHK1
PCHK2	ANDCC	#$FB	RET NE
PCKBYE	PULS	X,PC

BSET	JSR	SCLR1	CLEAR THE SCREEN FOR THE BONE
	LDX	PLRX	GET PLAYER
	LDA	PWAV,X	GET HIS WAVE NUMBER
	JSR	HEXBCD	IN BCD PLEASE (HUMAN NUMBER??)
	TFR	A,B	PUT IN B FOR MESSAGE
	CMPA	#5
	BLS	BSET1
	LDA	#5	NO MORE THAN 500 THOUGH FOR BONUS
BSET1	PSHS	A	SAVE FOR A MOMENT
	LDA	#ATTAKM	MAKE THE ATTACK MESSAGE
	JSR	WRD7FV
	PULS	A,PC	RESTORE A (HUNDRED VALUE) AND RETURN
*
*
*BONUS COLLECT PROCESS
*
*
* A GETS NUMBER OF HUNDREDS OF BONUS MULTIPLIER (HEX)

BONUS	CLR	PCRAM
	LDU	CRPROC
	PULS	X
	STX	PD+6,U	SAVE RETURN
BON1	CLRB
	TFR	D,Y	SAVE FOR TEXT
	TFR	A,B	MOVE COUNT TO COUNT
	LDA	#2	PUT IN POWER
	STD	PD4,U	AND SAVE FOR SCORE
	LDA	#ATWVM	WRITE IT OUT
	JSR	WRD7FV
	LDX	#$38A0	INITIAL ADDR
	LDA	ASTCNT
	STA	PD2,U
	BEQ	BC2
BCLP	TFR	X,D
	LDY	#ASTP3
	JSR	CWRIT
	LEAX	$400,X
	LDD	PD4,U	GET SCORE
	JSR	SCORE
	STX	PD,U
	NAP	4,BC1
BC1	LDX	PD,U
	DEC	PD2,U	ALL DONE?
	BNE	BCLP	NO
BC2	LDX	PLRX
	JSR	GETWVV
	NAP	$80,BC3	HANG OUT
BC3	JMP	[PD+6,U] RETURN
*
*INTERRUPT ROUTINE
*
IRQ	LDA	#RAM!>8
	TFR	A,DP
	LDA	#$34
	STA	PIA1+1
	LDA	PIA1
	LDA	VERTCT	PAST 128
	CMPA	#128
	BLO	I0	NO
	LDA	IFLG	ALREADY DONE ?
	BNE	IRQX	NO
	INC	IFLG
	JSR	SNDSEQ	SOUNDS+SWITCHES
	JSR	PLAYER
	JSR	STOUT	OUTPUT STARS
	LDA	VERTCT
	SUBA	#8
	CMPA	#$A8
	BLS	IRQ1
	LDA	#$A8
IRQ1	STA	XXX2
	LDD	XXX2
	JSR	OPROC
	LDD	XXX2
	JSR	PRDISP
	JSR	SHELL
	BRA	IRQX
I0	LDB	IFLG
	BEQ	IRQX
	CLR	IFLG
	INC	TIMER
	LDB	#WDATA
	STB	WDOG
	CMPA	#4	TOO LATE?
	BHI	I01
*COLOR MAPPING
	LDU	#CRAM+16
	LDD	PCRAM+10
	LDX	PCRAM+12
	LDY	PCRAM+14
	PSHU	D,X,Y
	LDD	PCRAM+4
	LDX	PCRAM+6
	LDY	PCRAM+8
	PSHU	D,X,Y
	LDD	PCRAM
	LDX	PCRAM+2
	PSHU	D,X
I01	JSR	CSCAN	COIN SWITCHES
	LDA	STATUS
	BITA	#$02
	BNE	IRQ2
	JSR	BGOUT
IRQ2	LDD	XXX1
	JSR	PRDISP
	LDD	XXX1
	JSR	OPROC
	JSR	VELO	UPDATE VELOCITIES
IRQX	ORCC	#$FF
	LDA	#$35
	STA	PIA1+1
	LDA	,S	E BIT FIX
	ANDA	#$6F
	STA	,S
	PULS	X,Y,D,U,PC,CC,DP
*
*INVERTED IRQ FOR SCREEN FLIP
*
IRQB	LDA	#RAM!>8
	TFR	A,DP
	LDA	#$34
	STA	PIA1+1
	LDA	PIA1
	LDA	VERTCT
	CMPA	#$60	CHECK A0 (COUNT RUNS BACKWARDS)
	BLO	IB0
	LDB	IFLG
	BNE	IRQX
	INC	IFLG
	COMA
	STA	XXX2	WRITING BOUNDARY
	JSR	CSCAN
	LDA	STATUS
	BITA	#$02
	BNE	IRQB2
	JSR	BGOUT
IRQB2	LDD	XXX1
	JSR	PRDISP
	LDD	XXX1
	JSR	OPROC
	BRA	IRQX
IB0	LDB	IFLG
	BEQ	IRQX
	CLR	IFLG
	INC	TIMER
	LDB	#WDATA	THROW ROVER A BONE
	STB	WDOG	BONE HIM
	CMPA	#4
	BHI	IB01
*COLOR MAPPING
	LDU	#CRAM+16
	LDD	PCRAM+10
	LDX	PCRAM+12
	LDY	PCRAM+14
	PSHU	D,X,Y
	LDD	PCRAM+4
	LDX	PCRAM+6
	LDY	PCRAM+8
	PSHU	D,X,Y
	LDD	PCRAM
	LDX	PCRAM+2
	PSHU	D,X
IB01	JSR	SNDSEQ
	JSR	PLAYER
	JSR	STOUT
	LDD	XXX2
	JSR	PRDISP
	LDD	XXX2
	JSR	OPROC
	JSR	SHELL
	JSR	VELO
	JMP	IRQX
*
*SHELL OUTPUT
*OBJCOL=OUTPUT ROUTINE
*ODATA=TIMER
*ODATA+1=DEAD OR NOT
SHELL	LDA	STATUS
	BITA	#$20
	BNE	SHELLX
	LDD	BGL	CLAC SCROLL
	ANDB	#$E0
	STD	SHTEMP
	LDD	BGLX
	ANDB	#$E0
	SUBD	SHTEMP
	ASLB
	ROLA
	ASLB
	ROLA
	STD	SHTEMP
	LDX	#SPTR	PROC BUGGERS
	BRA	SHELLP
SHELL1	LDY	OBJX,X	ERASE ADDR
	LDD	OYV,X
	ADDD	OY16,X
	CMPA	#YMIN
	BLS	SHBD	DEAD
	STD	OY16,X
	LDD	OXV,X
	ADDD	SHTEMP
	ADDD	OX16,X
	CMPA	#$97
	BHS	SHBD	DEAD
	STD	OX16,X
	ASLB	FLAVOR
	LDB	OY16,X
	STD	OBJX,X	NEW X
	JMP	[OBJCOL,X] OUTPUT
SHELLP	LDX	,X
	BNE	SHELL1
SHELLX	RTS
*BOMB OUTPUT
BMBOUT	LDU	BAX
	BCC	SHB1	ODD?
	LEAU	6,U
SHB1	LDD	#0	CLEAR IT
	STD	,Y
	STA	2,Y
	STD	$100,Y
	STA	$102,Y
	LDY	OBJX,X
	LDD	,U
	STD	,Y
	LDD	2,U
	STA	2,Y
	STB	$100,Y
	LDD	4,U
	STD	$101,Y
	BRA	SHELLP
SHBD	CLRD		KILL AND ERASE
	STA	ODATA+1,X
	STD	,Y
	STA	2,Y
	STD	$100,Y
	STA	$102,Y
	BRA	SHELLP
*FIREBALL MINI
FBOUT	LDD	#0
	STD	,Y
	STA	2,Y
	STD	$100,Y
	STA	$102,Y
	LDU	OBJX,X
	LDD	#$9999
	BCS	SHFB1	ODD
	ANDA	#$0F
	STD	,U
	STA	2,U
	ANDB	#$F0
	STB	$101,U
	BRA	SHELLP
SHFB1	ANDA	#$F0
	STD	$100,U
	STA	$102,U
	ANDB	#$0F
	STB	1,U
	BRA	SHELLP
*
*OUTPUT YLLAB BOMB
*
YLBOUT	LDU	OBJX,X
	LDD	#$0099
	STA	,Y	ERASE OLDIE
	STA	$100,Y
	STA	$200,Y
	BCS	YLBT1
	STB	,U
	STB	$100,U
	JMP	SHELLP
YLBT1	LDA	#$09
	STA	,U
	STB	$100,U
	LDA	#$90
	STA	$200,U
	JMP	SHELLP
YLBP1	FCB	2,1
	FDB	YLBD10,YLBD10,ON34,OFF34
YLBD10	FDB	$FFFF
*
*BOMB COLLISION
BKIL	LDD	#$25
	JSR	SCORE
	DEC	BMBCNT
	JSR	KILSHL
	JSR	OFSHIT
	LDD	OX16,X
	LSRA
	RORB
	LSRA
	RORB
	ADDD	BGL
	STD	OX16,X
	LDA	OY16,X
	SUBA	#2
	STA	OY16,X
	LDD	#BXPIC
	STD	OPICT,X
	JSR	XSVCT
	LDD	#AHSND
	JMP	SNDLD
*
*REVERSE
*
REV	LDA	REVFLG
	BNE	REVX
	INC	REVFLG
	LDD	PLADIR
	COMB
	COMA
	ADDD	#1
	STD	NPLAD
REV1	NAP	2,REV2
REV2	LDA	PIA21
	BITA	#$40
	BNE	REV1
	NAP	5,REVX1
REVX1	CLR	REVFLG
REVX	JMP	SUCIDE
*
*SMART BOMB
*
SBOMB	LDA	SBFLG
	BNE	SBMBX2
	LDX	PLRX
	LDA	PSBC,X
	BEQ	SBMBX2
	INC	SBFLG
	DEC	PSBC,X
	JSR	SBDSPV
	LDD	#SBSND
	JSR	SNDLD
SBMB00	LDX	OPTR
SBMB0	BEQ	SBMBX
	LDD	OX16,X
	SUBD	BGL
	CMPD	#$9C*64
	BHS	SBMB2
	LDA	OTYP,X
	CMPA	#$02
	BHS	SBMB2
*	JSR	[OCVECT,X]
	JMP	SBPCH	*****************DONT BLOW A NULLOB **********
	BRA	SBMB00
SBMB2	LDX	,X
	BRA	SBMB0
SBMBX	LDU	CRPROC
	LDA	#4	SCREEN FLASHES/2
	STA	PD,U
SBMBX0	COM	PCRAM
	NAP	2,SBMBX1
SBMBX1	DEC	PD,U
	BNE	SBMBX0
	CLR	PCRAM
SBX10	NAP	10,SBX1A SWITCH DEBOUNCE
SBX1A	LDA	PIA21
	BITA	#$4
	BNE	SBX10
	NAP	10,SBX2A
SBX2A	CLR	SBFLG
SBMBX2	JMP	SUCIDE
*
*HYPERSPACE
*
HYPER	LDA	STATUS
	BITA	#$FD
	LBNE	HYPX	NO GO
	ANDA	#2
	STA	PD4,U	SAVE TERRAIN BIT
	LDA	#$77
	STA	STATUS
	JSR	SCLR1
	NAP	15,HYP02
HYP02	LDX	SPTR	KILL BULLETS
	BEQ	KB2
	JSR	KILSHL
	BRA	HYP02
KB2	CLR	BMBCNT
	LDD	SEED
	STD	BGL
	STD	BGLX
*RANDOM HYPER DIRECTION
	LSRB
	BCC	HYP0
	LDD	#$2000
	LDX	#$0300
	BRA	HYP00
HYP0	LDX	#-$0300
	LDD	#$7000
HYP00	STD	PLAX16
	STX	NPLAD
	LDB	HSEED
	LSRB
	ADDB	#YMIN
	STB	PLAY16
	STD	NPLAXC
	CLRD
	STA	PLAXV+2
	STD	PLAXV
	STD	PLAYV
	JSR	BGINIT
*APPEAR PLAYER
	LDB	#$50
	BSR	STCHK0
	OBI	PLAPIC,KILLNO,$0000 CREATE PHONY OBJECT
	LDD	#0
	STD	OXV,X
	STD	OYV,X
	LDD	PLAY16
	STD	OY16,X
	LDD	PLAX16
	LSRA
	RORB
	LSRA
	RORB
	ADDD	BGL
	STD	OX16,X
	LDA	NPLAD
	BPL	HYP1
	LDU	#PLBPIC	REV IMAGE
	STU	OPICT,X
HYP1	LDU	CRPROC
	STX	PD,U
	JSR	APVCT
	NAP	$28,HYP2
HYP2	MAKP	DPKIL	DELAYED KILL PROCESS
	LDD	PD,U
	STD	PD,X
	LDA	PD4,U
	STA	STATUS
	LDA	LSEED	DEAD?
	CMPA	#192
	LBHI	HYPACH	YAHMAHN
HYPX	JMP	SUCIDE
*
*DELAYED PLAYER IMAGE KILL
*
DPKIL	LDX	PD,U
	JSR	KILOFF
	JSR	GETOB
	NAP	10,DPK1
DPK1	LDX	PD,U
	LDD	OFREE	BACK TO FREE LIST
	STD	,X
	STX	OFREE
	JMP	SUCIDE
*
* DUPLICATE NOKILL ROUTINE
*
KILLNO	CLRA
	PULS	D,PC
*
*TERRAIN STATUS UPDATE
*
STCHK	CLRB		CHECK TERRAIN ACTIVE
STCHK0	LDA	ASTCNT
STCHKA	BNE	STCHK1
	ORB	#2
STCHK1	STB	STATUS
	RTS
*
*MAKE A REG PROCESS
*X RET WITH PROC PTR
*[RET]=SADDR, TYPE=STYPE, RET=RET+2
*
MAKEP	PSHS	U,A
	LDU	3,S	GET X
	PULU	X
	STU	3,S	NEW RETURN
	LDA	#STYPE
	JSR	MKPROC
	PULS	U,A,PC
*GATE RING OFFSET TABLE OUTER-INNER,INNER-CENT; TL-TL
GOFFTB	FDB	$0805,$0805,$0705,$0604
	FDB	$0503,$0403,$0302,$0201
	FDB	$0101,$0001,$0001,$0001
	FDB	$0001,$0001,$0001,$0001
*
SCLEAN	LDX	#RAMALS
	STX	FREEP
SCLEN1	LEAX	$40,X
	STX	-$40,X
	CMPX	#RAMEND-$40
	BNE	SCLEN1
	CLRA
	CLRB
	STD	,X
	STD	APPTR
	STD	EXPTR
	STD	TRPTR
	STA	SAMEXC
	RTS
*
*
*STAR GATE OUTPUT
*OUTER RING
*
ONSG	PSHS	X,CC
	ADDB	#8
	TFR	D,U
	LSRA
	LSRA
	LSRA
	ANDA	#$FE	CALC RING OFFSETS
	LDX	#GOFFTB
	LDD	A,X
	STD	GATOF1
	PULS	CC
	LDD	GATCL1
	BCS	ONSG1
	ANDA	#$F0
	ANDB	#$F0
	BRA	ONSG2
ONSG1	ANDA	#$0F	FLAV1
	ANDB	#$0F
ONSG2	TFR	D,X
	LEAY	,X
	PSHU	D,X,Y	LEFT SIDE
	PSHU	D,X,Y
	LEAU	$70C,U
	PSHU	D,X,Y	RT. SIDE
	PSHU	D,X,Y
	BCS	ONSG3	ODD GUY
	LEAU	-$100,U
ONSG3	LDA	GATCL1
	STA	,U
	STA	-$100,U
	STA	-$200,U
	STA	-$300,U
	STA	-$400,U
	STA	-$500,U
	STA	-$600,U
	STA	11,U
	STA	-$100+11,U
	STA	-$200+11,U
	STA	-$300+11,U
	STA	-$400+11,U
	STA	-$500+11,U
	STA	-$600+11,U
	LDA	GATOF1
	BCC	ONSG20
	INCA		ODD CASE
	LSRA
	RORB		SAVE CARRY
	ADDA	#-7
	BRA	ONSG22
ONSG20	LSRA
	RORB
	ADDA	#-6
ONSG22	ROLB		RESTORE CARRY
	LDB	#3	VERT OFFSET
	LEAU	D,U	STARTING ADDR
	LDD	GATCL2	NEXT COLOR
	BCS	ONSG21	ODD FLAV
	STA	,U
	STA	5,U
	STA	$100,U
	STA	$105,U
	STA	$200,U
	STA	$205,U
	ANDA	#$F0
	ANDB	#$F0
	STD	1,U
	STD	3,U
	STD	$300,U
	STD	$302,U
	STD	$304,U
	BRA	ONSG30
*OUTPUT INNER RING ODD FLAVOR
ONSG21	STA	$100,U
	STA	$105,U
	STA	$200,U
	STA	$205,U
	STA	$300,U
	STA	$305,U
	ANDA	#$0F
	ANDB	#$0F
	STD	$301,U
	STD	$303,U
	STD	,U
	STD	2,U
	STD	4,U
*CENTER
ONSG30	LDA	GATOF2
	LDB	#2	VERT OFFSET
	ADCA	#0
	LSRA
	LEAU	D,U	ADDR
	LDD	GATCL3
	BCS	ONSG31
	ANDA	#$F0
	ANDB	#$F0
	STD	,U
	PULS	X,PC
ONSG31	ANDA	#$0F
	ANDB	#$0F
	STD	,U
	PULS	X,PC
*
*ERASE STAR GATE
*
OF812	PSHS	X
	ADDB	#08
	TFR	D,U
	LDD	#0
	LDX	#0
	LEAY	,X
	PSHU	X,Y,D
	PSHU	X,Y,D
	LEAU	268,U
	PSHU	X,Y,D
	PSHU	X,Y,D
	LEAU	268,U
	PSHU	X,Y,D
	PSHU	X,Y,D
	LEAU	268,U
	PSHU	X,Y,D
	PSHU	X,Y,D
	LEAU	268,U
	PSHU	X,Y,D
	PSHU	X,Y,D
	LEAU	268,U
	PSHU	X,Y,D
	PSHU	X,Y,D
	LEAU	268,U
	PSHU	X,Y,D
	PSHU	X,Y,D
	LEAU	268,U
	PSHU	X,Y,D
	PSHU	X,Y,D
	PULS	X,PC
*
*STAR GATE PIX
*
SGPIC	FCB	8,4
	FDB	SGD10,SGD10,ONSG,OF812
SGD10	FDB	$0000,$0000,$0000,$0000
	FDB	$0000,$0000,$1111,$1111
	FDB	$1111,$1111,$0000,$0000
	FDB	$0000,$0000,$0000,$0000
*
*GET ALTITUDE
*A=ALT,X=OBJ
*
GETALT	PSHS	B,X
	LDD	OX16,X
	LSRA
	RORB
	LSRA
	RORB
	LSRA
	RORB
	LSRA
	RORB
	LSRA
	RORB
	LSRA
	RORB
	LDX	#ALTBL
	LDA	D,X
	PULS	B,X,PC
*
*TIEST
*A=# IN SQUAD 1-4
*
TIEST	STA	XTEMP
	LDB	TIEXV
	COM	TFLG	ALTERNATE DIRECTIONS
	BMI	TIEST1
	NEGB
TIEST1	STB	XTEMP+1	X VELOCITY
	LDX	#TIE
	LDA	#STYPE
	JSR	MSPROC	MAKE A SUPER PROCESS
	LEAU	,X	SAVE INDEX
	LDA	XTEMP
	STA	PD+8,U
	CLRD
	STD	PD,U
	STD	PD2,U
	STD	PD4,U
	STD	PD6,U
TIEST2	OBI	TIEP1,TIEKIL,$8888
	LDB	XTEMP+1
	SEX
	STD	OXV,X
	CLRD
	STD	OYV,X
	LDA	XTEMP	X SPACING
	LSRA
	RORB
	ADDA	XTEMP
	ADDD	PLABX
	ADDA	#$80
	STD	OX16,X
	LDA	#$50
	STA	OY16,X
	STA	PD+9,U	CRUISE ALT
	STU	OBJID,X
	STX	OPTR
	LDA	XTEMP
	ASLA
	ADDA	#PD-2
	STX	A,U
	DEC	XTEMP
	BNE	TIEST2
TIESX	RTS
*
*TIE PROCESS
*PD,PD2,PD4,PD6=TIES,0000=DEAD
*PD8=#IN SQUAD,PD+9=CRUISE ALT
*
TIE	LDA	SEED	ADD RANDOM Y
	ANDA	#$6
	ADDA	#PD
	LDX	A,U
	LBEQ	TIEX	NONE THERE
	LDB	SEED
	LDA	#OBJL
	ANDB	#$3F
	ADDB	#-$20
	BMI	TIE0
	NEGA
TIE0	LDY	OPICT,X	NEW IMAGE
	LEAY	A,Y
	CMPY	#TIEP1
	BHS	TIE01
	LDY	#TIEP1
TIE01	CMPY	#TIEP4
	BLS	TIE02
	LDY	#TIEP4
TIE02	STY	OPICT,X
	SEX
	ADDD	OYV,X	NEW Y VEL
	STD	OYV,X
	ASLB
	ROLA
	ASLB
	ROLA
	ASLB
	ROLA
	TFR	A,B
	NEGB
	SEX
	ADDD	OYV,X
	STD	OYV,X
	LDA	OBJY,X	ON SCREEN?
	BNE	TIE09	YES
*OFF SCREEN CASE
*CRUISE ALT ADJUST
	LDA	SEED
	CMPA	#$40
	BHI	TIE06	BYPASS THIS TIME
	ANDA	#$3
	ADDA	#-2
	ADDA	PD+9,U
	CMPA	#$40	LIMIT CHECKING
	BHS	TIE03
	LDA	#$40
TIE03	CMPA	#$68
	BLO	TIE04
	LDA	#$68
TIE04	STA	PD+9,U
*Y VEL ADJUST
TIE06	LDA	PD+9,U
	SUBA	OY16,X
	ADDA	#$10
	CMPA	#$20
	BLS	TIEX
	SUBA	#$10
	BMI	TIE07
	LDD	#-$10
	BRA	TIE08
TIE07	LDD	#$10
TIE08	ADDD	OYV,X
	STD	OYV,X
	BRA	TIEX
*ON SCREEN
TIE09	SUBA	PLAYC	CLOSE TO PLAYER
	BMI	TIE20	BELOW
	CMPA	#$20
	BLO	TIE10	CLOSE
	LDD	#$FFF0
	BRA	TIE30
TIE10	CMPA	#$10
	BHI	TIE31
	LDD	#$0010
	BRA	TIE30
TIE20	CMPA	#-$20
	BGT	TIE21
	LDD	#$0010
	BRA	TIE30
TIE21	CMPA	#-$10
	BLT	TIE31
	LDD	#$FFF0
TIE30	ADDD	OYV,X
	STD	OYV,X
TIE31	LDA	LSEED	BOMB?
	ANDA	#$7
	BNE	TIEX	NO
	BSR	BOMBST
TIEX	NAP	1,TIE
*
*TIE KILL
*
TIEKIL	KILO	0125,TIHSND
	DEC	TIECNT
	LDU	OBJID,X
	LEAY	PD,U
TIEK1	CMPX	,Y++
	BNE	TIEK1
	CLRD
	STD	-2,Y
	DEC	PD+8,U
	BNE	TIEKX
	LEAX	,U
	JSR	KILL
TIEKX	RTS
*
*START BOMB
*
BOMBST	LDA	BMBCNT
	CMPA	#10
	BHS	BMBSTX
	SHL	BMBOUT,BMBP1,BKIL
	BEQ	BMBSTX
	LDB	HSEED
	SEX
	ASLB
	ROLA
	LDA	SEED
	ANDA	#$1F
	INCA
	STA	ODATA,X	LIFETIME
BMBSTX	RTS
KILOFF	JSR	KILLOB
	JMP	OFSHIT
*
*KILL ROUTINE
*X=OBJECT
*RET=SCORE MSB,LSB
*RET+2=SOUND
*
KILP01	PSHS	X
	JSR	KILLOP
	PULS	X
	BRA	KILO01
KILPOS	PSHS	X
	JSR	KILLOP
	PULS	X
KILOS	JSR	KILLOB
KILO01	PSHS	U,D
	LDU	4,S
	PULU	D
	JSR	SCORE
	BSR	EXST
	PULU	D
	STU	4,S
	JSR	SNDLD
	PULS	U,D,PC
*
*EXPLODE
*X=OBJECT TO BLOW
*
EXST	PSHS	X,U,D,Y
	JSR	OFSHIT
	JSR	XSVCT
	PULS	X,U,D,Y,PC
*
*COLOR TIES
*PD =TCTAB INDEX
TIECOL	LDX	#TCTAB
TIECL1	STX	PD,U
	NAP	6,TIECL
TIECL	LDX	PD,U
	LDD	,X++
	STD	PCRAM+$D
	LDA	,X+
	STA	PCRAM+$F
	CMPX	#TCTAB+9
	BLO	TIECL1
	BRA	TIECOL
*TIE COLOR TABLE
TCTAB	FCB	$81,$81,$2F
	FCB	$81,$2F,$07
	FCB	$2F,$81,$07
*
*COLOR BOMBS
*
CBOMB	LDA	#$FF
	STA	PCRAM+$A
	CLR	PCRAM+$C
	NAP	3,CBMB1
CBMB1	LDA	SEED
	ANDA	#$1F
	LDX	#COLTAB
	LDA	A,X
	STA	PCRAM+$A
	STA	PCRAM+$C
	LDX	#BMBD10
	CMPX	BAX
	BNE	CBMB2
	LDX	#BMBD20
CBMB2	STX	BAX
	NAP	6,CBOMB
*
ON75	PSHS	X	SAVE X
	STS	TEMP48
	BCC	ON751
	LEAY	2,Y
ON751	LDS	OBJP0,Y	SET POINTER TO BEGINNING OF OBJECT
	ADDB	#5
	TFR	D,U
	BRA	ON750

ON65	PSHS	X	SAVE X
	STS	TEMP48
	BCC	ON651
	LEAY	2,Y
ON651	LDS	OBJP0,Y	SET POINTER TO BEGINNING OF OBJECT
	ADDB	#5
	TFR	D,U
	BRA	ON650

ON85	PSHS	X	SAVE X
	STS	TEMP48
	BCC	ON851
	LEAY	2,Y
ON851	LDS	OBJP0,Y	SET POINTER TO BEGINNING OF OBJECT
	ADDB	#5
	TFR	D,U
	PULS	X,Y,A
	PSHU	X,Y,A
	LEAU	261,U
ON750	PULS	X,Y,A
	PSHU	X,Y,A
	LEAU	261,U
ON650	PULS	X,Y,A
	PSHU	X,Y,A
	LEAU	261,U
	PULS	X,Y,A
	PSHU	X,Y,A
	LEAU	261,U
	PULS	X,Y,A
	PSHU	X,Y,A
	LEAU	261,U
ON350	PULS	X,Y,A
	PSHU	X,Y,A
	LEAU	261,U
	PULS	X,Y,A
	PSHU	X,Y,A
	LEAU	261,U
	PULS	X,Y,A
	PSHU	X,Y,A
	LDS	TEMP48	RESTORE	STACK
	PULS	X,PC	AND RETURN
*
*ON 3X5 IMAGE
*
ON35	PSHS	X
	STS	TEMP48
	BCC	ON351
	LEAY	2,Y
ON351	LDS	OBJP0,Y
	ADDB	#5
	TFR	D,U
	BRA	ON350
*OFF 3X5
OFF35	PSHS	X
	ADDB	#5
	TFR	D,U
	CLRA
	LDX	#0
	LEAY	,X
	BRA	OFF350

OFF75	PSHS	X
	ADDB	#5
	TFR	D,U
	CLRA
	LDX	#0
	LEAY	,X
	BRA	OFF750

OFF65	PSHS	X
	ADDB	#5
	TFR	D,U
	CLRA
	LDX	#0
	LEAY	,X
	BRA	OFF650

OFF85	PSHS	X
	ADDB	#5
	TFR	D,U
	CLRA
	LDX	#0
	LEAY	,X
	PSHU	X,Y,A
	LEAU	261,U
OFF750	PSHU	X,Y,A
	LEAU	261,U
OFF650	PSHU	X,Y,A
	LEAU	261,U
	PSHU	X,Y,A
	LEAU	261,U
OFF450	PSHU	X,Y,A
	LEAU	261,U
OFF350	PSHU	X,Y,A
	LEAU	261,U
	PSHU	X,Y,A
	LEAU	261,U
	PSHU	X,Y,A
	PULS	X,PC	GET OUT OF HERE

OFF45	PSHS	X
	ADDB	#5
	TFR	D,U
	LDX	#0
	LEAY	,X
	CLRA
	BRA	OFF450
*
*DISPLAY YOUR INVISO
IVDISP	PSHS	D,X,Y,U
	LDA	SAMEXC
	BNE	IVDX
	LDX	#P1IVD
	LDA	.P1INV
	BSR	IVDSP
	LDA	PLRCNT
	DECA
	BEQ	IVDX
	LDX	#P2IVD
	LDA	.P2INV
	BSR	IVDSP
IVDX	PULS	D,X,Y,U,PC
IVDSP	PSHS	A
	LDD	#$2402
	JSR	BLKCLR
	LDA	,S+
	BEQ	IVDSPX
	CMPA	#180
	BLS	IVDSP1
	LDA	#180
IVDSP1	LDB	#$FF
	STB	,X
	STB	1,X
	LEAX	$100,X
	SUBA	#5
	BHI	IVDSP1
IVDSPX	RTS
*
*DISPLAY LASERS
*
LDISP	PSHS	D,X,Y,U	PLAYER 1
	LDA	SAMEXC
	BNE	LDPX
	LDX	#P1LAS
	LDA	.P1LAS
	BSR	LDSP
	LDA	PLRCNT
	DECA
	BEQ	LDPX
	LDX	#P2LAS
	LDA	.P2LAS
	BSR	LDSP
LDPX	PULS	D,X,Y,U,PC
LDSP	PSHS	A
	LDD	#$2406
	JSR	BLKCLR
	LDA	,S
	CMPA	#17
	BLS	LDSP1
	LDA	#17	MAXED
LDSP1	CMPA	#10
	BLO	LDSP2	>10
	SUBA	#10
	STA	,S	SAVE 1S
	LDY	#PLAPIC
	TFR	X,D
	JSR	CWRIT
	LDY	#PL10P	10
	ADDD	#$0002
	JSR	CWRIT
	LEAX	$0803,X
LDSP2	LDA	,S
	BEQ	LDSPX	NOBODY LEFT
	TFR	X,D
	LDY	#PL1P
LDSP3	JSR	CWRIT	WRITE OUT YOUR SHIPS
	ADDA	#4
	DEC	,S
	BNE	LDSP3
LDSPX	PULS	A,PC
*
*DISPLAY TOP OF SCREEN
*
TDISP	PSHS	D,X,Y,U
	LDD	#$4020
	LDX	#SCANER
	JSR	BLKCLR
	LDX	#$0008	PLAYER 1 UPPER RIGHT CORNER (NOTE...NO EQUATE)
	LDD	#$2F28	PLAYER 1 REGION SIZE
	JSR	BLKCLR
	LDX	#$7108	PLAYER 2 UPPER RIGHT
	LDD	#$2B28	REGION SIZE
	JSR	BLKCLR
	JSR	BORDER
	JSR	LDISP
	BSR	SBDISP
	JSR	IVDISP
	LDA	PLRCNT
TD1	JSR	SCRTR0
	DECA
	BNE	TD1
	JSR	MESINV	INITIALIZE MESSAGE REGION
	PULS	D,X,Y,U,PC
*
*SMART BOMB DISPLAY
*
SBDISP	PSHS	X,Y,D,U
	LDA	SAMEXC	CHECK IF OK TO WRITE
	BNE	SBDX
	LDX	#P1SBD
	LDA	.P1SBC
	BSR	SBDSP
	LDA	PLRCNT
	DECA
	BEQ	SBDX
	LDX	#P2SBD
	LDA	.P2SBC
	BSR	SBDSP
SBDX	PULS	X,Y,D,U,PC
SBDSP	PSHS	A
	LDD	#$2405
	JSR	BLKCLR
	LDA	,S
	CMPA	#17
	BLS	SBDSP1
	LDA	#17
SBDSP1	CMPA	#10
	BLO	SBDSP2
	SUBA	#10
	STA	,S
	LDY	#SB10P
	TFR	X,D
	JSR	CWRIT
	LEAX	$0802,X
SBDSP2	LDA	,S
	BEQ	SBDSPX
	LDY	#SBPIC
	TFR	X,D
SBDSP3	JSR	CWRIT
	ADDA	#4
	DEC	,S
	BNE	SBDSP3
SBDSPX	PULS	A,PC
*PLAYER SHIP 10DISPLAY
PL10P	FCB	4,3
	FDB	PL10D
PL10D	FCB	$BB,$0B,$BB
	FCB	$9B,$9B,$96
	FCB	$99,$90,$99
	FCB	$9B,$96,$96
*PLAYER SHIP DISPLAY ONES UNITS
PL1P	FCB	4,3
	FDB	PL1D00
PL1D00	FCB	$BB,$BB,$B6
	FCB	$00,$BE,$66
	FCB	$00,$F0,$6F
	FCB	$00,$00,$F0
*SMART BOMB #10# DISP
SB10P	FCB	7,5
	FDB	SB10D
SB10D	FCB	$99,$00,$00,$00,$99
	FCB	$00,$90,$99,$90,$00
	FCB	$09,$92,$92,$92,$09
	FCB	$99,$92,$92,$92,$99
	FCB	$99,$22,$92,$22,$99
	FCB	$90,$9C,$9C,$9C,$90
	FCB	$00,$00,$C0,$00,$00
*
*DRAW BORDER
*
BORDER	LDA	SCNCOL
	LDB	SCNCOL
	LDX	#PLIN
BORD0	STA	,X
	LEAX	$100,X
	CMPX	#SCANER
	BLO	BORD0
	LDX	#P2ORG+PLIN-$100 PLAYER 2 LINE
BORD00	STA	,X
	LEAX	$100,X
	CMPX	#$9C00
	BLO	BORD00
	STA	SCANER-1 SCANNER CORNERS
	STA	SCANER+$FF
	STA	SCANER+28
	STA	SCANER+$100+28
	ANDA	#$0F
	LDX	#SCANER-$100-1
BORD01	STA	,X+
	CMPX	#SCANER-$100+35
	BNE	BORD01
	LDA	SCNCOL	RIGHT CORNERS
	LDB	SCNCOL
	STA	SCANER+$3F00-1
	STA	SCANER+$3E00-1
	STA	SCANER+$3E00+28
	STA	SCANER+$3F00+28
	ANDA	#$F0
	LDX	#SCANER+$4000-1
BORD02	STA	,X+
	CMPX	#SCANER+$4009+26
	BNE	BORD02
	LDD	#$9999
	LDX	#SCANER+$1C00-2
BORD3	STD	,X
	STD	30,X
	LEAX	$100,X
	CMPX	#SCANER+$2400-2
	BNE	BORD3
	RTS
*
*
*
*START DATA TABLES
*
*SWITCH TABLE
*
*
*COLOR RAM TABLE
*
CRTAB	FCB	0	0 SPACED OUT
	FCB	$F9	1 LASER (SPECIAL)
	FCB	$07	2 RED
	FCB	$28	3 GREEN
	FCB	$2F	4 YELLOW
	FCB	$00	5 MESSAGES
	FCB	$A4	6 GRAY
	FCB	$15	7 TERRAIN
	FCB	$C7	8 PURPLE
	FCB	$FF	9 WHITE
	FCB	$38	A BOMB CYCLER
	FCB	$17	B ORANGE
	FCB	$CC	C CYCLER
	FCB	$81	D TIE1
	FCB	$81	E TIE2
	FCB	$2F	F TIE3,MONO

PACTAB	FDB	$0205,C5P1 500 POINTS, 500 PICTURE
	FDB	$0210,C10P1 1000
	FDB	$0215,C15P1 1500
	FDB	$0220,C20P1

******************************
*G R A P H I C S
******************************
*SCHITZO
SCZP1	FCB	5,8
	FDB	SCZD10,SCZD11,ON58,OFF58
*ASTRO EXPLODE
ASXP1	FCB	4,8
	FDB	ASXD10,ASXD10,ON48,OFF48
*SWARM EXPLODE
SWXP1	FCB	4,8
	FDB	SWXD10,SWXD10,ON48,OFF48
*NULL OBJECT
NULOB	FCB	1,1
	FDB	NULD10,NULD10,DRTS,DRTS
NULD10	FCB	0
*PROBE
PRBP1	FCB	4,8
	FDB	PRBD10,PRBD11,ON48,OFF48
*ASTRONAUTS
*FACING LEFT
ASTP1	FCB	2,8
	FDB	ASTD10,ASTD11,ON28,OFF28
ASTP2	FCB	2,8
	FDB	ASTD20,ASTD21,ON28,OFF28
*FACING RT.
ASTP3	FCB	2,8
	FDB	ASTD30,ASTD31,ON28,OFF28
ASTP4	FCB	2,8
	FDB	ASTD40,ASTD41,ON28,OFF28
*TIE PICTS
TIEP1	FCB	4,8
	FDB	TIED10,TIED11,ON48,OFF48
TIEP2	FCB	4,8
	FDB	TIED20,TIED21,ON48,OFF48
TIEP3	FCB	4,8
	FDB	TIED30,TIED31,ON48,OFF48
TIEP4	FCB	4,8
	FDB	TIED40,TIED41,ON48,OFF48
*BOMB EXPLOSION PICT
BXPIC	FCB	4,8
	FDB	BXD10,BXD10,ON48,OFF48
*BOMB PICT
BMBP1	FCB	2,3
	FDB	BMBD10,BMBD11,ON23,OFF23
BMBP2	FCB	2,3
	FDB	BMBD20,BMBD21,ON23,OFF23
*LASER PICT
LASP1	FCB	8,1
	FDB	LASD10
LASD10	FDB	$FFFF,$FFFF,$FFFF,$FFFF
*SWARM PICTS
SWPIC1	FCB	3,4
	FDB	SWMD10,SWMD11,ON34,OFF34
*PLAYER PICTURE
PLAPIC	FCB	8,6
	FDB	PLD10,PLD11,ON86,OFF86
PLBPIC	FCB	8,6
	FDB	PLD20,PLD21,ON86,OFF86
*SMART BOMB
SBPIC	FCB	3,3
	FDB	SBD10
* DANCING 2
*250 SCORE
C25P1	FCB	6,5
	FDB	C25D10,C25D11,ON65,OFF65

*500 SCORE

C5P1	FCB	6,5
	FDB	C5D10,C5D11,ON65,OFF65
C10P1	FCB	7,5
	FDB	C10EVN,C10ODD
	FDB	ON75,OFF75

C15P1	FCB	7,5
	FDB	C15EVN,C15ODD
	FDB	ON75,OFF75

C20P1	FCB	8,5
	FDB	C20EVN,C20ODD
	FDB	ON85,OFF85

*250 SCORE
C25D10	FCB	$11,$00,$11,$10,$11
	FCB	$10,$10,$10,$00,$10
	FCB	$11,$10,$11,$00,$11
	FCB	$10,$00,$10,$10,$10
	FCB	$11,$10,$10,$10,$11
	FCB	$10,$10,$10,$10,$10
C25D11	FCB	$01,$00,$01,$01,$01
	FCB	$11,$01,$11,$00,$11
	FCB	$01,$01,$01,$00,$01
	FCB	$11,$00,$11,$01,$11
	FCB	$01,$01,$01,$01,$01
	FCB	$11,$01,$01,$01,$11
*500 SCORE
C5D10	FCB	$FF,$F0,$FF,$00,$FF
	FCB	$F0,$00,$F0,$F0,$F0
	FCB	$EE,$E0,$E0,$E0,$EE
	FCB	$E0,$E0,$E0,$E0,$E0
	FCB	$DD,$D0,$D0,$D0,$DD
	FCB	$D0,$D0,$D0,$D0,$D0
C5D11	FCB	$0F,$0F,$0F,$00,$0F
	FCB	$FF,$00,$FF,$0F,$FF
	FCB	$0E,$0E,$0E,$0E,$0E
	FCB	$EE,$0E,$0E,$0E,$EE
	FCB	$0D,$0D,$0D,$0D,$0D
	FCB	$DD,$0D,$0D,$0D,$DD

C10EVN	FCB	$10,$10,$10,$10,$10
	FCB	$11,$10,$10,$10,$11
	FCB	$10,$10,$10,$10,$10
	FCB	$11,$10,$10,$10,$11
	FCB	$10,$10,$10,$10,$10
	FCB	$11,$10,$10,$10,$11
	FCB	$10,$10,$10,$10,$10

C10ODD	FCB	$01,$01,$01,$01,$01
	FCB	$01,$01,$01,$01,$01
	FCB	$11,$01,$01,$01,$11
	FCB	$01,$01,$01,$01,$01
	FCB	$11,$01,$01,$01,$11
	FCB	$01,$01,$01,$01,$01
	FCB	$11,$01,$01,$01,$11

C15EVN	FCB	$C0,$C0,$C0,$C0,$C0
	FCB	$CC,$C0,$CC,$00,$CC
	FCB	$C0,$00,$C0,$C0,$C0
	FCB	$CC,$C0,$C0,$C0,$CC
	FCB	$C0,$C0,$C0,$C0,$C0
	FCB	$CC,$C0,$C0,$C0,$CC
	FCB	$C0,$C0,$C0,$C0,$C0

C15ODD	FCB	$0C,$0C,$0C,$0C,$0C
	FCB	$0C,$0C,$0C,$00,$0C
	FCB	$CC,$00,$CC,$0C,$CC
	FCB	$0C,$0C,$0C,$0C,$0C
	FCB	$CC,$0C,$0C,$0C,$CC
	FCB	$0C,$0C,$0C,$0C,$0C
	FCB	$CC,$0C,$0C,$0C,$CC

C20EVN	FCB	$FF,$00,$FF,$F0,$FF
	FCB	$F0,$F0,$F0,$00,$F0
	FCB	$FF,$F1,$F1,$F1,$FF
	FCB	$F0,$F0,$F0,$F0,$F0
	FCB	$FF,$F1,$F1,$F1,$FF
	FCB	$F0,$F0,$F0,$F0,$F0
	FCB	$FF,$F1,$F1,$F1,$FF
	FCB	$F0,$F0,$F0,$F0,$F0

C20ODD	FCB	$0F,$00,$0F,$0F,$0F
	FCB	$FF,$0F,$FF,$00,$FF
	FCB	$0F,$0F,$0F,$0F,$0F
	FCB	$FF,$1F,$1F,$1F,$FF
	FCB	$0F,$0F,$0F,$0F,$0F
	FCB	$FF,$1F,$1F,$1F,$FF
	FCB	$0F,$0F,$0F,$0F,$0F
	FCB	$FF,$1F,$1F,$1F,$FF
*
*SCHITZO
*
SCZD10	FCB	$00,$03,$F0,$F0,$F3,$00,$01,$10
	FCB	$0C,$0C,$04,$08,$38,$10,$00,$00
	FCB	$C0,$C0,$38,$78,$78,$A0,$A0,$A0
	FCB	$00,$33,$03,$03,$33,$10,$01,$00
	FCB	$00,$00,$F0,$F0,$F0,$00,$00,$10
SCZD11	FCB	$00,$00,$0F,$0F,$0F,$00,$00,$01
	FCB	$00,$30,$00,$00,$33,$01,$10,$00
	FCB	$CC,$CC,$43,$87,$87,$0A,$0A,$0A
	FCB	$00,$03,$80,$80,$83,$01,$00,$00
	FCB	$00,$30,$3F,$3F,$3F,$00,$10,$01
*ASTRO EXPLODE
ASXD10	FDB	$0000,$0D6C,$6C0D,$0000
	FDB	$06E6,$C883,$82C8,$EC06
	FDB	$606D,$8C28,$288C,$6D60
	FDB	$0000,$E0C6,$C6E0,$0000
*SWARM EXPLODE
SWXD10	FDB	$0000,$0222,$2402,$0000
	FDB	$0222,$4444,$2442,$2200
	FDB	$2022,$4444,$2442,$2200
	FDB	$0000,$2022,$2220,$0000
*PROBE
PRBD10	FDB	$000E,$00D8,$000E,$0000 1
	FDB	$0F08,$8CC8,$8C08,$0F00 2
	FDB	$000E,$80C8,$800E,$0000 3
	FDB	$0000,$00D0,$0000,$0000 4
PRBD11	FDB	$0000,$000D,$0000,$0000 1
	FDB	$00E0,$088C,$08E0,$0000 2
	FDB	$F080,$C88C,$C880,$F000 3
	FDB	$00E0,$008D,$00E0,$0000 4
*ASTRONAUTS
ASTD10	FDB	$3343,$4387,$8707,$0707 1
	FDB	$0000,$8080,$8000,$0000
ASTD11	FDB	$0304,$0408,$0800,$0000 1
	FDB	$3030,$3878,$7870,$7070 2
ASTD20	FDB	$3343,$4387,$8777,$7777 1
	FDB	$0000,$8080,$8000,$0000
ASTD21	FDB	$0304,$0408,$0807,$0707
	FDB	$3030,$3878,$7870,$7070
ASTD30	FDB	$0303,$8387,$8707,$0707
	FDB	$3040,$4080,$8000,$0000
ASTD31	FDB	$0000,$0808,$0800,$0000
	FDB	$3334,$3478,$7870,$7070
ASTD40	FDB	$0303,$8387,$8707,$0707
	FDB	$3040,$4080,$8070,$7070
ASTD41	FDB	$0000,$0808,$0800,$0000
	FDB	$3334,$3478,$7877,$7777
*
*TIE PICTS
*
TIED10	FDB	$0808,$DDDE,$DEDE,$DD00 1
	FDB	$8888,$DDEE,$FEEE,$DD00 2
	FDB	$8888,$D8D8,$D8D0,$D000 3
	FDB	0,0,0,0 4
TIED11	FDB	$0000,$0D0D,$0D0D,$0D00 1
	FDB	$8888,$DDEE,$EFEE,$DD00 2
	FDB	$8888,$DDED,$EDED,$DD00 3
	FDB	$8080,$8080,$8000,$0000 4
TIED20	FDB	$0008,$DDDE,$DEDE,$DD00 1
	FDB	$0088,$DDEE,$FEEE,$DD00 2
	FDB	$0088,$D8D8,$D8D8,$D000 3
	FDB	0,0,0,0 4
TIED21	FDB	$0000,$0D0D,$0D0D,$0D00 1
	FDB	$0088,$DDEE,$EFEE,$DD00 2
	FDB	$0088,$DDED,$EDED,$DD00 3
	FDB	$0080,$8080,$8080,$0000 4
TIED30	FDB	$0000,$DDDE,$DEDE,$DD00 1
	FDB	$0000,$DDEE,$FEEE,$DD00 2
	FDB	$0000,$D8D8,$D8D8,$D800 3
	FDB	0,0,0,0 4
TIED31	FDB	$0000,$0D0D,$0D0D,$0D00 1
	FDB	$0000,$DDEE,$EFEE,$DD00 2
	FDB	$0000,$DDED,$EDED,$DD00 3
	FDB	$0000,$8080,$8080,$8000 4
TIED40	FDB	$0000,$DDDE,$DEDE,$DD00 1
	FDB	$0000,$DDEE,$FEEE,$DD88 2
	FDB	$0000,$D0D8,$D8D8,$D888 3
	FDB	0,0,0,0
TIED41	FDB	$0000,$0D0D,$0D0D,$0D00 1
	FDB	$0000,$DDEE,$EFEE,$DD88 2
	FDB	$0000,$DDED,$EDED,$DD88 3
	FDB	$0000,$0080,$8080,$8080 4
*BOMB EXPLOSION PICT
BXD10	FDB	$000C,$CCCC,$CCCC,$0C00
	FDB	$CCCC,$CCCC,$CCCC,$CCCC
	FDB	$CCCC,$CCCC,$CCCC,$CCCC
	FDB	$00C0,$CCCC,$CCCC,$C000
*
*BOMB PICT
*
BMBD10	FDB	$A00A,$A0A0,$00A0
BMBD11	FDB	$0A00,$0A0A,$A00A
BMBD20	FDB	$0AAA,$0A00,$A000
BMBD21	FDB	$000A,$00A0,$AAA0
*SWARM PICTS
SWMD10	FDB	$0002,$2302
	FDB	$2022,$2322
	FDB	$0000,$2000
SWMD11	FDB	$0000,$0200
	FDB	$0222,$3222
	FDB	$0020,$3220
*
*PLAYER PICTURE
*
PLD10	FCB	$FB,$0B,$BB,$0B,$BB,$06
	FCB	$00,$B0,$BB,$B6,$66,$66
	FCB	$00,$00,$BB,$66,$66,$FF
	FCB	$00,$00,$BB,$66,$66,$F0
	FCB	$00,$00,$B0,$6D,$66,$00
	FCB	$00,$00,$00,$EF,$66,$00
	FCB	$00,$00,$00,$00,$FF,$00
	FCB	$00,$00,$00,$00,$F0,$00
PLD11	FCB	$0F,$00,$0B,$00,$0B,$00
	FCB	$B0,$BB,$BB,$BB,$B6,$66
	FCB	$00,$00,$BB,$66,$66,$6F
	FCB	$00,$00,$BB,$66,$66,$FF
	FCB	$00,$00,$BB,$66,$66,$00
	FCB	$00,$00,$00,$DE,$66,$00
	FCB	$00,$00,$00,$F0,$6F,$00
	FCB	$00,$00,$00,$00,$FF,$00
PLD20	FCB	$00,$00,$00,$00,$FF,$00
	FCB	$00,$00,$00,$0F,$F6,$00
	FCB	$00,$00,$00,$ED,$66,$00
	FCB	$00,$00,$BB,$66,$66,$00
	FCB	$00,$00,$BB,$66,$66,$FF
	FCB	$00,$00,$BB,$66,$66,$F6
	FCB	$0B,$BB,$BB,$BB,$6B,$66
	FCB	$F0,$00,$B0,$00,$B0,$00
PLD21	FCB	$00,$00,$00,$00,$0F,$00
	FCB	$00,$00,$00,$00,$FF,$00
	FCB	$00,$00,$00,$FE,$66,$00
	FCB	$00,$00,$0B,$D6,$66,$00
	FCB	$00,$00,$BB,$66,$66,$0F
	FCB	$00,$00,$BB,$66,$66,$FF
	FCB	$00,$0B,$BB,$6B,$66,$66
	FCB	$BF,$B0,$BB,$B0,$BB,$60
*SMART BOMB
SBD10	FCB	$90,$09,$90
	FCB	$99,$99,$99
	FCB	$90,$CC,$90
*************SCANNER BLIP FIX
PACH1	LDU	CRPROC
	LDA	PD,U
	INCA
	CMPA	#4
	BLS	PACH10
	CLRA
PACH10	STA	PD,U
	BNE	PACH1X
	JSR	WVCHKV
	CMPA	#5
	BHI	PACH1X	TOO MANY GUYS
	LDX	#OPTR
	LDU	#SETAB
	BSR	PCH13
	LDX	#IPTR
	BSR	PCH13
	JMP	BOZ2	EXIT BACK
PACH1X	LDX	#OPTR
	JMP	BOZ1
*BLIP SCAN SUBROUTINE
PCH110	LDD	OX16,X	FIND OFFSET
	SUBD	XTEMP	SUBTRACT SCANNER LEFT
	LSRA	SHIFT	DOWN TO 6 BITS
	LSRA
	LDB	OY16,X
	LSRB
	LSRB
	LSRB
	ADDD	#SCANER-5
	STD	,U
	LDD	OBJCOL,X STORE BLIP
	BEQ	BLPX
	CMPD	#$9000
	BEQ	BLPX	HUM
	CMPD	#$4000
	BEQ	BLPX	FIREBALL
	CMPA	#$33	BAITER
	BEQ	BLPX
	CMPD	#$6666
	BEQ	BLPX	HUMANOIDS
	CMPD	#$4433
	BEQ	BLPX	LANDERS
	CMPA	#$1F	STAR GATE?
	BNE	PCH120	NO
	LDD	,U
	CMPA	#SCANER!>8+$3F CLIP GATE AT LIMIT
	BNE	PCH12A
	DECA
	STA	,U
PCH12A	LDY	#$FFF0
	STY	[,U++]
	INCB
	STD	,U
	LDY	#$F0FF
	STY	[,U++]
	INCA
	STD	,U
	LDY	#$F0F0
	STY	[,U++]
	DECB
	STD	,U
	STY	[,U++]
	BRA	PCH13
PCH120	LDD	#$9999
BLPX	STD	[,U++]
PCH13	LDX	,X	DO THE REST
	BNE	PCH110
	RTS
*
*NO LOW PRIORITY SOUNDS IN ATTR
*
SNDPCH	PSHS	X,D,CC
	CLR	THFLG
	TFR	D,X
	LDA	,X
	TST	STATUS
	LBPL	$705	NOT ATTR
SNDPCX	CMPA	#$F0
	LBHS	$705
	PULS	X,D,CC,PC NOGO
*
*ATTR SWITCH SCAN PATCH
*
SWPCH	LDB	STATUS
	BPL	SWPCHX
	LSRB
	BCS	SWPCHX
	LDB	PIA2
	ANDB	#$7D
	ORB	ATRSW2	THRUST+ UP
	STB	PIA21
	LDB	PIA3
	ANDB	#$FE
	ORB	ATRSW3
	JMP	$78C
SWPCHX	LDB	PIA2
	JMP	$787
*
*NO SCORE IN ATTR PATCH
*
SCRPCH	PSHS	A,B,X,U,Y
	TST	STATUS
	BMI	SCRPCX	ATTR NO SCORE
	ORCC	#1
	JMP	$143E
SCRPCX	PULS	A,B,X,U,Y,PC
*
*SMART BOMB DONT KILL NULLOBS PATCH
*
SBPCH	LDD	OPICT,X
	CMPD	#NULOB
	LBEQ	SBMB2
	JSR	[OCVECT,X]
	JMP	SBMB00
LASPAT	LDA	SAMEXC	NO LASER DURING BAD TERRAIN
	BNE	NOLAS
	LDA	LFLG	HOW MANY
	CMPA	#4
	BHS	NOLAS
	RTS
NOLAS	JMP	SUCIDE
*
	ORG	$2B70

SWPACH	BEQ	SWP$
	JSR	INVSTV
SWP$	LDA	INDIAG	NO SWITCH PROC IF IN DIAGS
	BNE	SWP3$	NO SWITCH PROCESSING
	LDX	SWPROC	CHECK FIRST GUY
	BNE	SWP1$	DO HIS WORK
	LDX	SWPROC+4 CHECK SECOND GUY
	BEQ	SWP2$	EMPTY....CHECK THIRD
	LDD	SWPROC+6
	CLR	SWPROC+4
	CLR	SWPROC+5
	JMP	SWP3	AND GO BACK AND DO REST
SWP1$	LDD	SWPROC+2
	CLR	SWPROC
	CLR	SWPROC+1
	JMP	SWP3	JUMP BACK AND DO IT
SWP2$	LDX	SWPR3$	CHECK THIRD SWITCH COUNTER
	BEQ	SWP4$	NOTHING THERE...DONE.
	LDD	SWPR3$+2
	CLR	SWPR3$
	CLR	SWPR3$+1
	JMP	SWP3
SWP4$	LDX	SWPR4$
	LBEQ	SWPX
	LDD	SWPR4$+2
	CLR	SWPR4$
	CLR	SWPR4$+1
	JMP	SWP3
*
SWP3$	JMP	SWPX	JUMP PAST SWITCH PROCESSING
*
*
*IRQ SWITCH PATCH
*
SWWPC9	BNE	SWWPC0	NO ROOM IN FIRST COUNTER
	STD	SWPROC
	STX	SWPROC+2
	BRA	SWWPC4
SWWPC0	LDU	SWPROC+4
	BNE	SWWPC2
	STD	SWPROC+4
	STX	SWPROC+6
	BRA	SWWPC4
SWWPC2	LDU	SWPR3$
	BNE	SWWPC3
	STD	SWPR3$
	STX	SWPR3$+2
	BRA	SWWPC4
SWWPC3	STD	SWPR4$
	STX	SWPR4$+2
SWWPC4	PULS	U,D	GET BASE, SHIFTERS BACK
	TSTA
	LBNE	SW0	BIT STILL IN A NEED PROCESSING
	RTS		ELSE RETURN TO INTERRUPT PROCESSOR
HYPACH	LDA	SCRFLG	ANY SCORE OR IS IT SAFE TO KILL HIM?
	BNE	HYPC1	YEP...KILL HIM
	JMP	SUCIDE	NOPE..DIE
HYPC1	JMP	PLNDV1
*
VOLPAC	CLR	LAVTIM,X
	CLR	LAVX,X
	JMP	VOLCLX
	END
