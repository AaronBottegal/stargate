	NLIST
	INCLUDE	SPHR56.SRC
	INCLUDE	EQ4.SRC
	LIST
	TTL	<<<<<  S T A R G A T E  >>>>>
YMAXX	EQU	$F6
YMINN	EQU	$0A
XMAX	EQU	$9C
NRINGS	EQU	$10
RADIUS	EQU	$800
DELTA	EQU	$60	STEP SIZE (IN Y DIRECTION)

	ORG	WRPRAM	USE SAME RAM AS WARP EFFECT.

TEMP1	RMB	2	USED BY ROKSUB FOR DISTORTION OF DIAMOND
TEMP2	RMB	1	USED TO MEASURE TIME TILL NEXT GUY OUT.
TEMP3	RMB	1	NUMBER OF RINGS TO DO.
TEMP4	RMB	2	USED BY RNG
TEMP5	RMB	2	USED BY ROCK GENERATOR
TEMP6	RMB	1	DIVIDER USED FOR COLOR BEGINNING
NUMTER	RMB	1	NUMBER OF BLOCKS
TERXV	RMB	2	VELOCITY OF CURRENT BLOCK
TERYV	RMB	2
BLOPT	RMB	2	USED BY ROCK GENERATOR TO STORE BLOW UP POINT
FROBPT	RMB	2	THIS POINTS AT CURRENT FROB
TABPTR	RMB	2	POINTER TO FIRST UNUSED ENTRY IN TABLE
PCSAV	RMB	1
SDDD	EQU	*
HSDDD	RMB	1
LSDDD	RMB	1

PTABLE	EQU	*

.YV	RMB	2
.XV	RMB	2
.XPOS	RMB	2
.OLD	RMB	2
.YPOS	EQU	.OLD+1
	RMB	1	LOW HALF OF YPOS
.FROB	RMB	1

PSIZZ	EQU	*-PTABLE
XV	EQU	.XV-PTABLE
YV	EQU	.YV-PTABLE
XPOS	EQU	.XPOS-PTABLE
YPOS	EQU	.YPOS-PTABLE
FROB	EQU	.FROB-PTABLE
OLD	EQU	.OLD-PTABLE
	RMB	(PSIZZ*(398))	ROOM FOR 351 ENTRIES
PTABE	EQU	*
	RMB	PSIZZ*4

	ORG	BLOWV	ROM SPACE FOR BLOW UP

	JMP	ROCK0	GO TO ENTRY POINT

PIECES	FCB	$11
	FCB	$22
	FCB	$33
	FCB	$44
	FCB	$55
	FCB	$66
	FCB	$77
	FCB	$88
ENDPIC	EQU	*

DISTAB	FCB	$07,$F8
	FCB	$01,$FE
	FCB	$03,$FC
	FCB	$00,$FF	DIAMOND IN THE ROUGH
	FCB	$03,$FC
	FCB	$03,$FC
	FCB	$01,$FE
	FCB	$07,$F8

SNDTAB	FDB	SCHSN$
	FDB	AHSN$
	FDB	LHSN$
	FDB	LASSN$
	FDB	TIMSN$
	FDB	AHSN$

SCHSN$	FCB	$E8,$01,$08,$17,$00
AHSN$	FCB	$E8,$01,$18,$11,$00
LHSN$	FCB	$E8,$01,$0A,$06,$00
LASSN$	FCB	$E8,$01,$08,$14,$00
TIMSN$	FCB	$E8,$01,$08,$01,$01,$01,$13,$00

ROKSUB	CMPX	#PTABE	TOO MANY??
	BHS	ROKSS0	YEP..BYE
ROSSUB	JSR	RANDM
	ANDB	#$7
	ASLB
	LDY	#DISTAB
	LDY	B,Y
	STY	TEMP1
GETBLO	JSR	RANDM
	LDD	HSDDD	GET THE SDDD SET
	CMPA	#XMAX
	BHS	GETBLO
	CMPB	#YMINN
	BLS	GETBLO
	CMPB	#YMAXX
	BHS	GETBLO
	STD	BLOPT
	CLRA
	CLRB
ROKSB1	STD	TEMP5	SAVE INDEX
	STD	,X++	Y DONE FOR FIRST POINT
	BSR	RNDDIS	GET A RANDMOM DISPLACEMENT IN D
	STD	,X++
	BSR	STORSB	STORE THE REST OF THE CRUD
	LDD	TEMP5	GET IT BACK
	STD	,X++	USE THE SAME Y
	BSR	RNDDIS
	COMA
	COMB
	ADDD	#1
	STD	,X++
	BSR	STORSB
	LDD	TEMP5
	COMA
	COMB
	ADDD	#1
	PSHS	D
	STD	,X++
	BSR	RNDDIS
	STD	,X++
	BSR	STORSB
	PULS	D
	STD	,X++
	BSR	RNDDIS
	COMA
	COMB
	ADDD	#1
	STD	,X++
	BSR	STORSB
	CMPX	#PTABE	BEYOND TABLE??
	BHS	ROKSS0	THEN GET THE $ OUT OF HERE
	LDD	TEMP5
	ADDD	#DELTA	MOVE UP TO NEXT
	CMPD	#RADIUS	ARE WE UP TO RADIUS??
	BLO	ROKSB1	NOPE...DO ANOTHER
ROKSS0	STX	TABPTR	THIS IS THE NEW POINTER VALUE
	RTS

RNDDIS	JSR	RANDM
	CLRB		FOR THE PERFECT ONES..NO FRACTION
	LDA	LSDDD	GET THE NEW ONE
	BPL	RNDDS1
	ORA	TEMP1+1
	COMB		FOR THE PERFECT ONES..NO FRACTION
	BRA	RNDDS2
RNDDS1	ANDA	TEMP1
RNDDS2	SUBD	TEMP5	THIS FORMS X.
	ADDD	#RADIUS
	ASRA
	RORB
	RTS

STORSB	LDD	BLOPT	GET HIGH HALF OF START POINT
	STD	,X++
	STA	,X+	TOP HALF OF OLD
	LDA	BLOPT+1	OLD
	STD	,X++
	LDA	[FROBPT]
	STA	,X+	PUT THE FROB DOWN
	RTS

GETVEL	LDA	HSDDD
	ANDA	#$7
	ADDA	#2
	STA	NUMTER	NUMBER OF BITS
	JSR	RANDM	GET NEW RANDOM
	ORB	#$80
	ASRB
	SEX
	SUBD	#$80
	STD	TERYV
	JSR	RANDM
	SEX
	ASLB
	ROLA
	STD	TERXV
	RTS

ROCK0	LDU	CRPROC
	PULS	X	GET RETURN ADDRESS
	STX	PD+6,U	AND SAVE
	LDX	IRQHK+1
	STX	IRQSV
	LDX	#BLOIRQ	USE OUR IRQ
	STX	IRQHK+1
	LDD	HSEED	RANDMOMIZE IT
	STD	SDDD
	LDD	#PIECES
	STD	FROBPT
	LDA	#NRINGS
	STA	TEMP3
	LDA	#$30	SMALL DELAY UNTIL FIRST RING
	STA	TEMP2
	LDA	#1
	STA	TEMP6
	LDA	#$FF
	STA	PCRAM+7
	LDX	#PTABLE	LETS WALK THROUGH AND INIT THE TABLE
	LDY	#STBL	START AT BEGINNING
BTER0	BSR	GETVEL	FILL IN VELOCITY RAM AND PICK RANDOM PT CT.
BTER1	LDD	TERXV
	STD	XV,X
	LDD	TERYV
	STD	YV,X
	LDD	,Y++
	STD	XPOS,X
	STD	OLD,X
	LDA	#$77
	STA	FROB,X
	LEAX	PSIZZ,X
	CMPY	#STBL+($9A*2)
	BHS	ROCK0$
	DEC	NUMTER
	BNE	BTER1
	BRA	BTER0

ROCK0$	STX	TABPTR

UPDATE	LDA	TEMP3
	CMPA	#NRINGS
	BNE	DATUP0
	LDA	TEMP2
	CMPA	#$20
	BEQ	DATUP2
	CMPA	#$10
	BEQ	DATUP2
	CMPA	#1
	BNE	DATUP3
DATUP2	JSR	ACCSUB
DATUP3	DEC	TEMP6
	BNE	DATUP0
	LDA	#3
	STA	TEMP6
	LDD	#TIMSN$
	JSR	SNDLD
	LDX	#COLTAB
	JSR	RANDM
	ANDB	#$1F
	LDA	B,X
	STA	PCSAV
DATUP0	LDA	TEMP2
	DECA		REMOVE ONE
	STA	TEMP2
	BNE	UPDT1
	JSR	NWRING
	BRA	UPPDT2
UPDT1	NAP	1,UPPDT2

UPPDT2	LDA	#8
	STA	OVCNT	SIMULATE AN OVERFLOW TO GET TRASH OFF OF SCREEN.

	LDX	TABPTR	GET THE POINTER
	CMPX	#PTABLE+(10*PSIZZ) LESS THAN TEN POINTS LEFT??
	BHS	RKKKP2	NOPE...CONTINUE
	LDX	IRQSV	RESTORE THE IRQ VECTOR
	STX	IRQHK+1
	CLR	PCRAM
	LDU	CRPROC	TIME TO CAN IT
	JMP	[PD+6,U]

RKKKP2	LDX	#PTABLE	GET START OF TABLE
	LDY	#0

ROKUP2	CMPX	TABPTR	AT END???
	BEQ	UPDATE
	STY	[OLD,X]	ERASES OLD ONE
	LDD	YV,X
	ADDD	YPOS,X
	CMPA	#YMAXX
	BCC	BYEPT2
	CMPA	#YMINN
	BCS	BYEPT2
	STD	YPOS,X
	LDD	XV,X
	ADDD	XPOS,X
	CMPA	#XMAX
	BCC	BYEPT2
	STD	XPOS,X
	STA	OLD,X
	LDA	FROB,X
	LDB	FROB,X
	STD	[OLD,X]	STORE FROB
	LEAX	PSIZZ,X	MOVE TO NEXT
	BRA	ROKUP2

BYEPT2	LDU	TABPTR	GET THE POINTER
	LEAU	-PSIZZ,U MOVE DOWN ONE ENTRY
	STU	TABPTR
	LDD	XV,U
	STD	XV,X
	LDD	YV,U
	STD	YV,X
	LDD	XPOS,U
	STD	XPOS,X
	LDD	OLD,U
	STD	OLD,X
	LDD	OLD+2,U
	STD	OLD+2,X
	BRA	ROKUP2

NWRING	LDA	HSDDD
	ANDA	#$07
	ADDA	#2
	STA	TEMP2
	TST	TEMP3
	BEQ	NWRTSS
	LDA	#NRINGS
	SUBA	TEMP3
	CMPA	#10
	BLS	NRING0	TOO LOW FOR FURY
	CMPA	#20
	BHI	NRING0
	LDA	#4
	STA	TEMP2
NRING0	DEC	TEMP3
	LDD	FROBPT
	ADDD	#1
	CMPD	#ENDPIC	END??
	BNE	NWRNG1
	LDD	#PIECES
NWRNG1	STD	FROBPT
	BSR	SNDSND
	LDB	HSDDD
	ANDB	#$1F
	LDY	#COLTAB
	LDB	B,Y
	STB	PCSAV
	LDX	TABPTR
	JMP	ROKSUB	ADD THE NEW WAVE AND RETURN
NWRTSS	RTS

ACCSUB	LDX	#PTABLE
ACCSB1	CMPX	TABPTR
	BEQ	NWRTS
	LDD	XV,X	GET THE X VELOCITY
	ASLB
	ROLA
	STD	XV,X
	LDD	YV,X
	ASLB
	ROLA
	STD	YV,X
	LEAX	PSIZZ,X
	BRA	ACCSB1

SNDSND	JSR	RANDM
	ANDB	#$E
	CMPB	#12
	BHS	SNDSND
	LDY	#SNDTAB
	LDD	B,Y
	JMP	SNDLD	MAKE THE SOUND

*AND LDA HSDDD
* ASLA
* EORA HSDDD
* ASLA
* ASLA
* ROL LSDDD
* ROL HSDDD
* LDB HSDDD RETURN IN B
*WRTS RTS

RANDM	LDD	SDDD
	RORA
	RORB	B	NOW HAS HIGH HALF OF NEW SDDD
	LDA	HSDDD	FOR LOW SEVEN BITS
	ASLA
	EORA	HSDDD	BIT 6-0 IS NOW LOW SEVEN BITS OF NEW SDDD
	STB	HSDDD	NOW STORE OFF B
	ASLA		BIT 7-1 NOW HAVE LOW SEVEN BITS OF NEW SDDD
	LDB	LSDDD	GET THE EITH BIT FROM THE OLD LOW BIT
	RORB
	RORA
	STA	LSDDD
	LDB	LSDDD	RETURN IN B
NWRTS	RTS

BLOIRQ	LDA	VERTCT	GET COUNT
	CMPA	#$10	TOO LOW?? HIGH???
	BHS	IRQX
	LDA	PCSAV
	BNE	IRQ0
	LDA	PCRAM	TIME TO FADE
	BITA	#$C0
	BEQ	NOBLUE
	SUBA	#$40
NOBLUE	BITA	#$38
	BEQ	NOGRN
	SUBA	#$08
NOGRN	BITA	#$7
	BEQ	IRQ2
	DECA
	BRA	IRQ2	MINIMIZE THE RACE
IRQ0	CLR	PCSAV
IRQ2	STA	PCRAM
IRQX	JMP	[IRQSV]	GO TO NORMAL IRQ ROUTINE NOW
*
	END
