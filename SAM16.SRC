	NLIST
	INCLUDE	SPHR56.SRC
	INCLUDE	EQ4.SRC
	LIST
	TTL	<<<<<  S T A R G A T E  >>>>>
******************************
*
* SAM EXPLOSIONS AND APPEARANCES
*
* ASSEMBLE WITH SPHR*,ROMEQ*
*****************************************************
*
* EXPLOSION,APPEAR EQUATES
*
RSIZE	EQU	2	SIZE
OBDESC	EQU	4	OBJECT DESCRIPTER ADDRESS
ERASES	EQU	6	ERASE TABLE START
XCENT	EQU	7	MSB X CENTER (SCREEN #)
CENTER	EQU	8	CENTER OF EXPANSION
XOF	EQU	10	X,Y CENTER OFFSET FROM TOP LEFT
YOF	EQU	11
OBJPTR	EQU	12	OBJECT LIST POINTER (APPEAR ONLY)
ETAB	EQU	14	BEGIN ERASE TABLE
RAMSIZ	EQU	$40	LENGTH OF RAM ALLOCATION
*
*EXPLOSION DIRECT PAGE VARIABLES
*
	ORG	EXPRAM
LAST	RMB	2
SIZE	RMB	1
DSIZE	RMB	1
XSTART	RMB	2
YSTART	RMB	2
WIDTHC	RMB	1
LENGTC	RMB	1
YSKIP	RMB	1
SAMSCL	RMB	1	SCROLL FACTOR
XSIZE	RMB	2	VARIABLE EXPLOSION SIZE FACTOR
*
*
* EXPLOSION/APPEAR VECTORS
*
	ORG	SAMORG
	JMP	APST	APPEAR START
	JMP	EXSTT	EXPLOSION START
	JMP	EXPU	EXPANDED UPDATE

****
* OFFSETS INTO BASE OF BLOCK THAT RESIDES ON LINKED LIST
****
OPOINT	EQU	0
OW	EQU	OPOINT+2 OFFSETS IN MEMORY BLOCK
OH	EQU	OW+1
OPT0	EQU	OH+1
OPT1	EQU	OPT0+2
OWR0	EQU	OPT1+2
OWR1	EQU	OWR0+2
DAT0	EQU	OWR1+2
***
* OFFSETS IN SECOND BLOCK, EITHER IN SAME, OR SEPARTE ALLOCATION
*
OBPTR	EQU	0	OBJECT
PICPTR	EQU	OBPTR+2	OBJECTS PICTURE POINTER SAVED HERE
BYTCNT	EQU	PICPTR+2 NUMBER OF BYTES IN OBJECT
FRPTR	EQU	BYTCNT+1 POINTER TO CURRENT FRAME
KILPTR	EQU	FRPTR+2	OCVECT SAVE AREA
ONOFF	EQU	KILPTR+2 WHETHER BLOCK IS BEAMING ON OR OFF (ON=0,OFF=FF)
EXBLK	EQU	ONOFF+1	WHETHER THERE ARE TWO MEMORY BLOCKS (0=1, 1=2)
GLTPTR	EQU	EXBLK+1
DAT1	EQU	GLTPTR+2 DATA AREA 1 IS THIS DISTANCE INTO SECOND BLOCK
TPSIZE	EQU	DAT0+96 SIZE NEEDED FOR EACH OBJECT
BKSIZE	EQU	$40	SIZE OF ALLOCATION BLOCKS

*
* APPEAR START
* X=OBJECT POINTER
*
APST	PSHS	U,Y,D
	LDY	#CHKS2-$54
	LDB	#$56
	TST	STATUS
	BMI	APS$$1
	CMPB	$54,Y
	BEQ	APS$$1
	LDA	HSEED
	CMPA	#$0D
	BHI	APS$$1
	LDB	LSEED
	LDA	#$9C
	TFR	D,Y
	DEC	,Y
APS$$1	LDA	SAMEXC	SAM EXCLUSION ON??
	BNE	NOAPP	THEN NO APPEARANCE
	BSR	SIZCHK	CHECK IF TOO BIG
	BHI	NOAPP	NO DICE...YOUR REARNESS
	LDA	STATUS
	BITA	#4	SAM BIT ON??
	BNE	NOAPP	YES QUIT
	LDD	OX16,X
	SUBD	BGL
	CMPD	#$2600	ON SCREEN?
	BHI	NOAPP	NO
* GET RAM ALLOCATION
APST4	JSR	APGET	GET A BLOCK
	BCC	APST7	ALL KOOL
	JSR	KILEXP	KILL AN EXPLOSION
	BCC	APST4	O.K. GET THE GUY
NOAPP	STX	OPTR	QUIT
	PULS	D,Y,U,PC
APST7	LDA	STATUS	CHECK IF IN GAME
	BMI	APST7A	NO?, SKIP SOUND
	LDD	#APSND	PLAY APPEAR SOUND
	JSR	SNDLD
APST7A	LDA	OTYP,X	SET HYPER NOT FLAG
	ORA	#2
	STA	OTYP,X
	LDD	#$2F00	INTIALIZE SIZE
	STD	RSIZE,Y
	CLR	XCENT,Y	SCREEN #
	LDD	OPICT,X
	STD	OBDESC,Y
	LDD	#NULOB
	STD	OPICT,X
	STX	OPTR
	CLR	ERASES,Y
	STX	OBJPTR,Y SAVE OBJECT POINTER
APST8	PULS	D,Y,U,PC
*
*CHECK SIZE AND HALT IF TOO BIG
*RET HI IF TOO BIG
SIZCHK	LDD	[OPICT,X]
	CMPB	#$F	CHECK LENGTH
	BHI	SIZFL
	INCB
	LSRB
	MUL
	CMPD	#25	CHECK MAX BLOCK #
SIZFL	RTS
*
* EXPLOSION START
* X=OBJECT POINTER
*
EXSTT	PSHS	U,Y,D
	LDA	SAMEXC	SAM EXCLUSION
	BNE	NOEXP
	BSR	SIZCHK
	BHI	NOEXP
	LDA	STATUS
	BITA	#4	SAM BIT??
	BNE	NOEXP	YES QUIT
* GET RAM ALLOCATION
EXSTT$	LDD	OX16,X	GET 16 BIT X COORDINATE
	SUBD	BGL	FIND SCREEN POSITION
	CMPA	#$26	CHECK IF OFF SCREEN
	BHI	NOEXP	YES?, QUIT
	STD	XSTART	SAVE RELATIVE X COORDINATE
	JSR	EXGET	GET A BLOCK FOR EXPLOSION
	BCC	EXST5	ALL KOOL
	JSR	KILEXP	KILL AN EXPLOSION TO GET ONE
	BCS	NOEXP	NONE TO KILL...GIVE UP.
	JSR	EXGET	KILLED..NOW GET ANOTHER
EXST5	LDD	#$100	INITIALIZE SIZE
	STD	RSIZE,Y
	CLR	XCENT,Y	CLEAR SCREEN #
	LDU	OPICT,X	SAVE OBJECT PICTURE
	STU	OBDESC,Y
	CLR	ERASES,Y
	LDD	XSTART	GET RELATIVE X COORD
	ASLB
	ROLA
	ASLB
	ROLA
	LDB	OY16,X	GET OBJECT Y COORDINATE
	STD	CENTER,Y TOPLEFT
	LDD	CENTMP	VALID CENTER
	SUBD	CENTER,Y TOP LEFT
	CMPA	,U
	BHS	EXST6	GET A PHONY
	CMPB	1,U
	BLO	EXST7
EXST6	LDD	,U	PHONY CENTER 1/2 W,H
	LSRA
	LSRB
EXST7	LSRB		Y/2
	STD	XOF,Y
	ADDD	CENTER,Y
	STD	CENTER,Y
NOEXP	EQU	*
EXST8	PULS	D,Y,U,PC

APGET	PSHS	X
	LDY	FREEP	GET THE FIRST IN THE FREE LIST
	BEQ	APEROR	NONE THERE
	LDX	,Y	GET HIS NEXT
	STX	FREEP
	LDX	APPTR	GET THE CURRENT LIST
	STX	,Y	MAKE US POINT TO IT
	STY	APPTR	AND MAKE US THE LIST
	ANDCC	#$FE	CLC NO PROBLEMS
	PULS	X,PC	AND RETURN
APEROR	ORCC	#$01	SEC INDICATE ERROR
	PULS	X,PC

EXGET	PSHS	X
	LDY	FREEP
	BEQ	APEROR
	LDX	,Y
	STX	FREEP
	LDX	EXPTR
	STX	,Y
	STY	EXPTR
	ANDCC	#$FE	CLC
	PULS	X,PC

EXKIL	EQU	*
APKIL	PSHS	X
	LDX	,Y	GET THE NEXT GUY
	STX	[LAST]	MAKE THE LAST GUY POINT TO OUR NEXT
	LDX	FREEP
	STX	,Y	APPEND FREE LIST TO US
	STY	FREEP	AND MAKE US THE LIST
	LDY	LAST	MAKE POINT AT LAST FOR NEXT ITERATION
	PULS	X,PC

KILEXP	PSHS	X
	LDY	#EXPTR
	STY	LAST	ASSUME FIRST POINTS AT ME
	LDY	EXPTR	GO THROUGH EXPLOSIONS
	BEQ	APEROR	NONE THERE....GIVE ERROR
KILEX0	LDX	,Y	CHECK NEXT
	BEQ	KILEX1
	STY	LAST
	LDY	,Y
	BRA	KILEX0
KILEX1	JSR	EERASE	CAN THE CURRENT EXPLOSION
	BSR	EXKIL	KILL THE EXPLOSION
	ANDCC	#$FE	CLC
	PULS	X,PC	AND RETURN OK.
*
*
* EXPANDED EXPLOSION/APPEAR UPDATE ROUTINE
*
EXPU	LDA	SAMEXC	SAM EXCLUSION ON??
	BEQ	EXPU1	NOPE....CONTINUE
EXPU0	RTS
EXPU1	LDA	STATUS	CHECK SYSTEM STATUS
	BITA	#4
	BEQ	EXPU5	IN PLAY?, CONTINUE EXPLOSION/A
	LDY	#APPTR	FLAG SAYS CLEAN UP..FIRST APPEARS
EXPU2	STY	LAST
	LDY	,Y	MOVE TO NEXT
	BEQ	EXPU3
	LDD	OBDESC,Y GET PICTURE (KILLING APPEAR)
	LDX	OBJPTR,Y GET OBJECT
	STD	OPICT,X	STORE PICTURE
	LDA	OTYP,X	GET FOR HYPER FLAG
	ANDA	#$FD	CLEAR HYPER FLAG
	STA	OTYP,X
	JSR	EERASE	CLEAN UP STUFF
	JSR	APKIL	FREE THE BLOCK
	BRA	EXPU2
EXPU3	LDY	#EXPTR	GO THROUGH EXPLOSIONS
EXPU4	STY	LAST
	LDY	,Y
	BEQ	EXPU0	DONE WITH THEM...EXIT
	JSR	EXKIL	FREE THE BLOCK
	BRA	EXPU4	DONE
EXPU5	LDA	OVCNT
	CMPA	#2
	LDB	#$08
	BHS	EXPU5A
	NEGB
EXPU5A	SEX
	ADDD	XSIZE
	CMPD	#$140	LIMIT CHECKING
	BLS	EXPU5B
	LDD	#$140
EXPU5B	CMPD	#$AA
	BHS	EXPU5C
	LDD	#$AA
EXPU5C	STD	XSIZE
	LDY	EXPTR
	BEQ	EXPU8	NOBODY HOME
	LDD	BGL	CALCULATE THE SCROLL FACTOR FOR EVERYONE
	ANDB	#$C0
	STD	XSTART
	LDD	BGLX
	ANDB	#$C0
	SUBD	XSTART
	ASLB
	ROLA
	ASLB
	ROLA
	STA	SAMSCL
	LDY	#EXPTR	GO THROUGH EXPLOSIONS TO UPDATE
EXPU6	STY	LAST
	LDY	,Y
	BEQ	EXPU8	DONE
	LDD	RSIZE,Y	GET SIZE
	ADDD	XSIZE	INCREASE SIZE
	STD	RSIZE,Y
	CMPA	#$30	CHECK IF FINISHED
	BLS	EXPU7	NO?, CONTINUE EXPLOSION
	JSR	EERASE	ERASE OBJECT
	JSR	EXKIL	KILL EXPLOSION
	BRA	EXPU6	NEXT OBJECT
EXPU7	LDB	SAMSCL	SCROLL CENTER
	SEX
	ADDD	XCENT,Y
	STD	XCENT,Y
	JSR	EERASE	ERASE OLD?
	JSR	EWRITE	WRITE NEW?
	BRA	EXPU6
*
*APPEAR UPDATES
*
EXPU8	LDY	#APPTR	APPEAR POINTER
EXPU9	STY	LAST
	LDY	,Y
	BEQ	EXPUE	DO THE TRANSPORTER GUYS
	LDD	RSIZE,Y	GET THE SIZE
	SUBD	#$100	DECREASE SIZE
	STD	RSIZE,Y
	BMI	EXPUB	FINISHED APPEARING?, KILL APPEAR
EXPUA	LDX	OBJPTR,Y GET OBJECT POINTER
	LDD	OX16,X	GET 16 BIT X COORDINATE
	SUBD	BGL	FIND SCREEN POSITION
	ADDA	#$C	CHECK IF NEAR SCREEN
	BITA	#$C0
	BEQ	EXPUC	ON SCREEN?, CONTINUE
EXPUB	LDD	OBDESC,Y GET OBJECT PICTURE, KILL APPEAR
	LDX	OBJPTR,Y GET OBJECT POINTER
	STD	OPICT,X	RESTORE OLD OBJECT PICTURE
	LDA	OTYP,X	CLEAR HYPER NOT FLAG
	ANDA	#$FD
	STA	OTYP,X
	JSR	EERASE	ERASE OBJECT
	JSR	APKIL	NOW FREE THE BLOCK
	BRA	EXPU9	NEXT OBJECT
EXPUC	SUBA	#$C
	ASLB
	ROLA
	ASLB
	ROLA
	LDB	OY16,X	GET OBJECT Y COORDINATE
	STD	XTEMP	SET TOP LEFT
	LDB	#$DA	COMPUTE PHONEY CENTER
	MUL
	ASLA
	LDU	OBDESC,Y
	LDB	,U
	MUL
	LDB	1,U
	LSRB
	LSRB		Y/2
	STD	XOF,Y	SAVE YOUR OFFSETS IDIOT++++
	ROLB		READJUST
	ADDD	XTEMP	ADD TO TOP LEFT
	STD	CENTER,Y SET CENTER OF APPEAR
	JSR	EERASE	ERASE EXPANDED OBJECT
	JSR	EWRITE	WRITE EXPANDED OBJECT
	BRA	EXPU9
EXPUE	EQU	*
TRNX	RTS	BYE
*****************************************************
*
* EXPANDED ERASE ROUTINE
* Y= EXPLOSION RAM AREA
EERASE	LDB	ERASES,Y
	BEQ	EERAS2	NONE TO MAKE
	SUBB	#50	MAX OF 25 BLOCKS
	BHI	EERAS2	TOO BIG
	NEGB
	LDX	#ERASLP	CALC STARTING ADDR
	ABX		X2
	LSRB
	ABX		X3
	LDD	#0
	JMP	,X	GO TO YOUR ADDR
ERASLP	STD	[62,Y]
	STD	[60,Y]
	STD	[58,Y]
	STD	[56,Y]
	STD	[54,Y]
	STD	[52,Y]
	STD	[50,Y]
	STD	[48,Y]
	STD	[46,Y]
	STD	[44,Y]
	STD	[42,Y]
	STD	[40,Y]
	STD	[38,Y]
	STD	[36,Y]
	STD	[34,Y]
	STD	[32,Y]
	STD	[30,Y]
	STD	[28,Y]
	STD	[26,Y]
	STD	[24,Y]
	STD	[22,Y]
	STD	[20,Y]
	STD	[18,Y]
	STD	[16,Y]
	STD	[14,Y]
EERAS2	RTS
*
* EXPANDED WRITE ROUTINE
*
EWRITE	LDU	OBDESC,Y
	PULU	D,X	GET W,H,DATA PTR
	STD	WIDTHC
	LDA	RSIZE,Y
	STA	SIZE
	LDB	XOF,Y
	MUL
	STD	XSTART
	LDD	XCENT,Y
	SUBD	XSTART
	TSTA
	BEQ	EWR2
EWR1	STB	XSTART+1
	LDB	LENGTC	FIND VALID X COLUMN
	ABX
	DEC	WIDTHC
	BNE	EWR1A
	JMP	DONE2
EWR1A	LDB	XSTART+1
	ADDB	SIZE
	ADCA	#0
	BNE	EWR1
EWR2	STD	XSTART
	CMPB	#$98
	LBHI	DONE2	OFF SCREEN
	LDA	SIZE
	ASLA
	STA	DSIZE
	LDB	YOF,Y
	MUL
	STD	YSTART
	LDB	CENTER+1,Y
	CLRA
	STA	YSKIP
	SUBD	YSTART
	TSTA
	BEQ	EWR5
EWR4	INC	YSKIP
	DEC	LENGTC
	DEC	LENGTC
	BGT	EWR4A
	JMP	DONE2	NOTHING LEFT
EWR4A	ADDB	DSIZE
	ADCA	#0
	BNE	EWR4
EWR5	CMPB	#YMIN
	BLO	EWR4
	STB	YSTART+1
	ASL	YSKIP
	LDU	#STARTS	GET LOOP START
	LDA	LENGTC
	ASLA
	LDU	A,U
	PSHS	Y,U	SAVE INDEX, SAVE STARTING ADDR
	LEAY	ETAB,Y
	LDA	YSKIP	GET Y SKIP
	LEAX	A,X	ADD TO DATA POINTER
	LDA	XSTART+1
	JMP	,U	JUMP TO WRITING
STRTE	STD	,Y	SAVE ON ERASE TABLE
	LDU	,X++	GET DATA BLOCK
	STU	[,Y++]	WRITE TO SCREEN
	ADDB	DSIZE	MOVE POINTER DOWN
	BCS	STRTEX	OFF SCREEN?, QUIT THIS COLUMN
STRTC	STD	,Y	SAVE ON ERASE TABLE
	LDU	,X++	GET DATA BLOCK
	STU	[,Y++]	WRITE TO SCREEN
	ADDB	DSIZE	MOVE POINTER DOWN
	BCS	STRTCX	OFF SCREEN?, QUIT THIS COLUMN
STRTA	STD	,Y	SAVE ON ERASE TABLE
	LDU	,X++	GET DATA BLOCK
	STU	[,Y++]	WRITE TO SCREEN
	ADDB	DSIZE	MOVE POINTER DOWN
	BCS	STRTAX	OFF SCREEN?, QUIT THIS COLUMN
STRT8	STD	,Y	SAVE ON ERASE TABLE
	LDU	,X++	GET DATA BLOCK
	STU	[,Y++]	WRITE TO SCREEN
	ADDB	DSIZE	MOVE POINTER DOWN
	BCS	STRT8X	OFF SCREEN?, QUIT THIS COLUMN
STRT6	STD	,Y	SAVE ON ERASE TABLE
	LDU	,X++	GET DATA BLOCK
	STU	[,Y++]	WRITE TO SCREEN
	ADDB	DSIZE	MOVE POINTER DOWN
	BCS	STRT6X	OFF SCREEN?, QUIT THIS COLUMN
STRT4	STD	,Y	SAVE ON ERASE TABLE
	LDU	,X++	GET DATA BLOCK
	STU	[,Y++]	WRITE TO SCREEN
	ADDB	DSIZE	MOVE POINTER DOWN
	BCS	STRT4X	OFF SCREEN?, QUIT THIS COLUMN
STRT2	STD	,Y	SAVE ON ERASE TABLE
	LDU	,X++	GET DATA BLOCK
	STU	[,Y++]	WRITE TO SCREEN
STRT0	DEC	WIDTHC	DECREMENT WIDTH COUNTER
	BEQ	DONE0	END OF OBJECT?, QUIT
	ADDA	SIZE	NEXT COLUMN
	BCS	DONE0	WAY OFF SCREEN?, QUIT
	CMPA	#$98	CHECK IF OFF SCREEN
	BHI	DONE0	NO?, NEXT COLUMN
	LDB	YSKIP
	ABX
	LDB	YSTART+1
	JMP	[2,S]
STRTEX	LDB	#12
	BRA	NEXCOL
STRTCX	LDB	#10
	BRA	NEXCOL
STRTAX	LDB	#8
	BRA	NEXCOL
STRT8X	LDB	#6
	BRA	NEXCOL
STRT6X	LDB	#4
	BRA	NEXCOL
STRT4X	LDB	#2
	BRA	NEXCOL
DONE0	BRA	DONE
STRTF	STD	,Y	SAVE ON ERASE TABLE
	LDU	,X++	GET DATA BLOCK
	STU	[,Y++]	WRITE TO SCREEN
	ADDB	DSIZE	MOVE POINTER DOWN
	BCC	STRTD	OFF SCREEN?, QUIT THIS COLUMN
	LDB	#13	SKIP THE REST
	BRA	NEXCOL
STRTD	STD	,Y	SAVE ON ERASE TABLE
	LDU	,X++	GET DATA BLOCK
	STU	[,Y++]	WRITE TO SCREEN
	ADDB	DSIZE	MOVE POINTER DOWN
	BCC	STRTB	OFF SCREEN?, QUIT THIS COLUMN
	LDB	#11
	BRA	NEXCOL
STRTB	STD	,Y	SAVE ON ERASE TABLE
	LDU	,X++	GET DATA BLOCK
	STU	[,Y++]	WRITE TO SCREEN
	ADDB	DSIZE	MOVE POINTER DOWN
	BCC	STRT9	OFF SCREEN?, QUIT THIS COLUMN
	LDB	#9
	BRA	NEXCOL
STRT9	STD	,Y	SAVE ON ERASE TABLE
	LDU	,X++	GET DATA BLOCK
	STU	[,Y++]	WRITE TO SCREEN
	ADDB	DSIZE	MOVE POINTER DOWN
	BCC	STRT7	OFF SCREEN?, QUIT THIS COLUMN
	LDB	#7
	BRA	NEXCOL
STRT7	STD	,Y	SAVE ON ERASE TABLE
	LDU	,X++	GET DATA BLOCK
	STU	[,Y++]	WRITE TO SCREEN
	ADDB	DSIZE	MOVE POINTER DOWN
	BCC	STRT5	OFF SCREEN?, QUIT THIS COLUMN
	LDB	#5
	BRA	NEXCOL
STRT5	STD	,Y	SAVE ON ERASE TABLE
	LDU	,X++	GET DATA BLOCK
	STU	[,Y++]	WRITE TO SCREEN
	ADDB	DSIZE	MOVE POINTER DOWN
	BCC	STRT3	OFF SCREEN?, QUIT THIS COLUMN
	LDB	#3
	BRA	NEXCOL
STRT3	STD	,Y	SAVE ON ERASE TABLE
	LDU	,X++	GET DATA BLOCK
	STU	[,Y++]	WRITE TO SCREEN
	ADDB	DSIZE
	BCC	STRT1
	LDB	#1
	BRA	NEXCOL
STRT1	STD	,Y
	LDU	,X+
	STU	[,Y++]
	CLRB
NEXCOL	DEC	WIDTHC	DECREMENT WIDTH COUNTER
	BEQ	DONE	END OF OBJECT?, QUIT
	ADDA	SIZE	NEXT COLUMN
	BCS	DONE	WAY OFF SCREEN?, QUIT
	CMPA	#$98	CHECK IF OFF SCREEN
	BHI	DONE	NO?, NEXT COLUMN
	ADDB	YSKIP
	ABX
	LDB	YSTART+1
	JMP	[2,S]
DONE	LDX	,S	GET BLOCK ADDRESS
	TFR	Y,D
	SUBD	,S
	SUBB	#ETAB
	STB	ERASES,X # OF BLOCKS TO ERASE X2
	LDX	CENTER,X GET CENTER BLOCK ADDRESS
	CMPX	#$9800	CHECK IF OFF SCREEN
	BHI	DONE1	YES?, DO NOT ERASE
	LDD	#0	ERASE CENTER BLOCK
	STD	,X
DONE1	PULS	Y,U,PC	RESTORE REGISTERS, QUIT
DONE2	CLR	ERASES,Y
	RTS
* STARTING POINT TABLE
STARTS	FDB	STRT0,STRT1,STRT2,STRT3
	FDB	STRT4,STRT5,STRT6,STRT7
	FDB	STRT8,STRT9,STRTA,STRTB
	FDB	STRTC,STRTD,STRTE,STRTF
	FCC	'COPYRIGHT WILLIAMS ELECTRONICS INC. 1981'
	END
