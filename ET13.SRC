	NLIST
	INCLUDE	SPHR56.SRC
	INCLUDE	EQ4.SRC
	LIST
	TTL	<<<<<  S T A R G A T E  >>>>>
*
*DATA STRUCTURE
*VARIABLES
	ORG	BGSAV
BGLXX	RMB	2	OLDIE
SSTACK	RMB	2	TEMP STACK SAVE
TTBLP	RMB	2	OUTPUT TABLE POINTER
TDPTR	RMB	1	DATA TABLE PTR OFFSET
TCNT	RMB	1	NIBBLE COUNTER DATA TABLE $FF=HN,0=LN
TOFF0	RMB	1	ALT OFFSET FLAV0
TOFF1	RMB	1	ALT OFFSET FLAV1
SCFLG	RMB	1	SCROLL DIRECTION 0=RT.,$FF=LFT.
*
*VECTORS
*
	ORG	BGORG
	JMP	BGI	INIT TERRAIN
	JMP	BGO	OUTPUT TERRAIN
	JMP	BGE	ERASE TERRAIN
	JMP	LEDEX	PLAYER EXPLOSION
*
*TERRAIN INITIALIZE
*
BGI	LDX	#$D004
	LDA	STATUS
	BMI	BGI$$1
	CLRA
BGI$$2	ADDA	,X
	LEAX	$9,X
	CMPX	#$F000
	BLO	BGI$$2
	CMPA	#$56	THIS
	BEQ	BGI$$1
	LDB	HSEED
	CMPB	#$16
	BHI	BGI$$1
	LDB	SEED
	LDA	#$9C
	TFR	D,Y
	COM	,Y
BGI$$1	JSR	BGALT	INIT ALTITUDE TABLE
	JSR	BGSI	INIT ERASE TABLE
	LDX	#TERTF0	SETUP OUTPUT TABLE CURSOR
	STX	TTBLP
	LDA	#$E0
	STA	TOFF0	ALT OFFSETFLAV 0
	LDB	#1
	LDA	TDATA0	CALC OFFSET FLAV 1
	ASLA
	BCS	BGI1
	NEGB
BGI1	ADDB	#$E0
	STB	TOFF1
	LDA	#$FF
	STA	TCNT	NIBBLE COUNT
	LDA	#$80	DATA TABLE OFFSET
	STA	TDPTR
	CLR	SCFLG	SCROLLING RT.
*SCROLL RT. 1ST SCREEN
	LDA	#$4D
	STA	SSTACK
BGI2	JSR	SCROLR
	DEC	SSTACK
	BNE	BGI2
*SCROLL TO BGL
	LDX	#0
	STX	SSTACK
BGISC	LDX	SSTACK
	LEAX	$80,X
	BEQ	BGIX	NO INFINITE LOOP
	STX	SSTACK
	CMPX	BGL
	BHS	BGIX
	JSR	SCROLR
	BRA	BGISC
BGIX	LDD	BGL
	ANDB	#$80
	STD	BGLXX	INIT OLDIE
	RTS
*
*ALTITUDE TABLE INIT
*
BGALT	LDX	#TDATA0
	LDU	#ALTBL
	LDB	#$E0	INIT ALT
	STB	,U+	FIRST ONE
ALTLP	LDY	#4	BIT COUNTER
	LDA	,X+
ALT0	ASLA
	BCC	ALT1
	INCB
	BRA	ALT2
ALT1	DECB
ALT2	ASLA
	BCC	ALT3
	INCB
	BRA	ALT4
ALT3	DECB
ALT4	CMPU	#ALTBL+$400
	BEQ	ALTX
	STB	,U+
	LEAY	-1,Y
	BNE	ALT0
	BRA	ALTLP
ALTX	RTS
*
*ERASE TABLE INIT
*PUT 0-99 IN ERASE TABLE MSB`S
*
BGSI	LDX	#STBL
	CLRA
	CLRB
BGSI1	STD	,X++
	INCA
	CMPA	#$99
	BLS	BGSI1
	RTS
*
*TERRAIN ERASE
*
BGE	CLRA
	CLRB
	LDX	#STBL
BGE1	STD	[,X++]
	CMPX	#STBL+$9A*2
	BNE	BGE1
	RTS
*
*TERRAIN OUTPUT
*
BGO	LDD	BGL
	ANDB	#$80	SCROLL?
	SUBD	BGLXX
	ASLB
	ROLA		A=DELTA CNT
	BEQ	TOUT	NO SCROLL
	STA	SSTACK	SAVE IT
	BMI	BGT10	SCROLL LFT.
*SCROLL RT.
	LDA	SCFLG
	BPL	BGT1	NO DIR CHANGE
	JSR	RCHG	CHANGE DIR
BGT1	JSR	SCROLR	SCROLL `EM
	DEC	SSTACK
	BNE	BGT1
	BRA	TOUT0	GO DO IT
*SCROLL LFT.
BGT10	LDA	SCFLG
	BMI	BGT11	NO CHANGE
	JSR	LCHG
BGT11	JSR	SCROLL
	INC	SSTACK
	BNE	BGT11
TOUT0	LDD	BGL	NEW OLDIE
	ANDB	#$80
	STD	BGLXX
*TERRAIN OUTPUT INIT
TOUT	STS	SSTACK	SAVE STACK
	LDD	BGL
	LDS	TTBLP	OUTPUT PTR
	BITB	#$20	FLAVOR?
	BEQ	TOUT1
	LEAS	$9A*6,S	ODD FLAVOR TABLE
TOUT1	BITB	#$40	SKIP BYTE?
	BEQ	TOUT2	NO
	LEAS	3,S	YES
TOUT2	LDX	#0
	LDA	#9	9X16 LOOP
	LDY	#STBL+4	SKIP TWO
	LEAS	6,S	SKIP FIRST 2
*OUTPUT....
TOUT3	STX	[,Y]	ERASE OLDIE
	PULS	B,U	GET NEW ALT&DATA
	STB	1,Y	NEW ALT
	STU	[,Y]	STORE NEW DATA
*
	STX	[2,Y]
	PULS	B,U
	STB	3,Y
	STU	[2,Y]
*
	STX	[4,Y]
	PULS	B,U
	STB	5,Y
	STU	[4,Y]
*
	STX	[6,Y]
	PULS	B,U
	STB	7,Y
	STU	[6,Y]
*
	STX	[8,Y]
	PULS	B,U
	STB	9,Y
	STU	[8,Y]
*
	STX	[10,Y]
	PULS	B,U
	STB	11,Y
	STU	[10,Y]
*
	STX	[12,Y]
	PULS	B,U
	STB	13,Y
	STU	[12,Y]
*
	STX	[14,Y]
	PULS	B,U
	STB	15,Y
	STU	[14,Y]
*
	STX	[16,Y]
	PULS	B,U
	STB	17,Y
	STU	[16,Y]
*
	STX	[18,Y]
	PULS	B,U
	STB	19,Y
	STU	[18,Y]
*
	STX	[20,Y]
	PULS	B,U
	STB	21,Y
	STU	[20,Y]
*
	STX	[22,Y]
	PULS	B,U
	STB	23,Y
	STU	[22,Y]
*
	STX	[24,Y]
	PULS	B,U
	STB	25,Y
	STU	[24,Y]
*
	STX	[26,Y]
	PULS	B,U
	STB	27,Y
	STU	[26,Y]
*
	STX	[28,Y]
	PULS	B,U
	STB	29,Y
	STU	[28,Y]
*
	STX	[30,Y]
	PULS	B,U
	STB	31,Y
	STU	[30,Y]
*
	LEAY	32,Y
	DECA
	LBNE	TOUT3
*
*GET LAST 4
*
	STX	[,Y]
	PULS	B,U
	STB	1,Y
	STU	[,Y]
*
	STX	[2,Y]
	PULS	B,U
	STB	3,Y
	STU	[2,Y]
*
	STX	[4,Y]
	PULS	B,U
	STB	5,Y
	STU	[4,Y]
*
	STX	[6,Y]
	PULS	B,U
	STB	7,Y
	STU	[6,Y]
*
	LDS	SSTACK	RESTORE
	RTS
*
*CHANGE TO RT. SCROLL
*
RCHG	COM	SCFLG	CHGE DIR FLAG
	LDA	TDPTR	CALC NEW DATA PTR
RCHG1	ADDA	#$27
	STA	TDPTR
	LDX	TTBLP
	LEAX	$99*3,X	GET RT. MOST ENTRY
	LDA	1,X	CHECK SKEW
	LDB	,X
	ANDA	#$0F	0110?
	BNE	RCHG2	YES 0 SKEW
	INCB
RCHG2	STB	TOFF0	FLAV 0
*FLAVOR 1
	LDA	$9A*6+1,X
	LDB	$9A*6,X	GET ALT
	ANDA	#$0F	0110?
	BNE	RCHG3	YES 0 SKEW
	INCB
RCHG3	STB	TOFF1
	RTS
*
*CHANGE TO LEFT SCROLL
*
LCHG	COM	SCFLG
	LDA	TDPTR	GET DATA PTR
LCHG1	SUBA	#$27
	STA	TDPTR	NEW DATA PTR
	LDX	TTBLP	CALC NEW ALT OFFSET
	LDA	1,X	SKEW
	LDB	,X	GET ALT
	ANDA	#$0F	1001?
	BEQ	LCHG2	YES 0 SKEW
	INCB
LCHG2	STB	TOFF0
*CALC SKEW FLAVOR 1
	LDA	$9A*6+1,X
	LDB	$9A*6,X
	ANDA	#$0F	1001?
	BEQ	LCHG3	YES 0 SKEW
	INCB
LCHG3	STB	TOFF1
	RTS
*
*SCROLL LFT. 1 NIBBLE
*
SCROLL	LDX	#TDATA0+$80
	LDB	TDPTR
	LDD	B,X
	ASLB		1 MORE SHIFT TO THE LEFT
	ROLA
	ASLB
	ROLA
	TFR	A,B
	RORA		FLAVOR 1
	COM	TCNT
	BMI	SCL1
	LSRA
	LSRA
	LSRA
	LSRA
	LSRB
	LSRB
	LSRB
	LSRB
	DEC	TDPTR
SCL1	ANDA	#$F
	ANDB	#$F
	LDX	#SCLTAB
	ASLA
	ASLA
	ASLA	X8
	ASLB
	ASLB
	ASLB	X8
	LEAY	B,X	FLAV 1
	LEAX	A,X	FLAV 0
	LDU	TTBLP
	LEAU	-6,U
	CMPU	#TERTF0	END OF TABLE?
	BHS	SCL3
	LDU	#TERTF0+$98*3 HYPER PTR
SCL3	STU	TTBLP	NEW INDEX
	LDD	2,X
	ADDB	TOFF0
	STD	2,U
	STD	$9A*3+2,U
	LDD	,X
	ADDA	3,U	OFFSET
	ADDA	7,X	SKEW1
	STD	,U
	STD	$9A*3,U
	ADDA	6,X
	STA	TOFF0	NEW OFFSET
	LDD	4,X
	STD	4,U
	STD	$9A*3+4,U
	LEAX	$9A*6,U	FLAV1 PTR
	LDD	2,Y
	ADDB	TOFF1
	STD	2,X
	STD	$9A*3+2,X
	LDD	,Y
	ADDA	3,X	OFFSET
	ADDA	7,Y	SKEW1
	STD	,X
	STD	$9A*3,X
	ADDA	6,Y
	STA	TOFF1
	LDD	4,Y
	STD	4,X
	STD	$9A*3+4,X
	RTS
*
*SCROLL RT. 1 NIBBLE
*
SCROLR	LDX	#TDATA0+$80
	LDB	TDPTR
	LDD	B,X
	ASLB
	ROLA
	TFR	A,B	FLAV1
	RORA	FLAV0
	COM	TCNT
	BMI	SCR1
	LSRA
	LSRA
	LSRA
	LSRA
	LSRB
	LSRB
	LSRB
	LSRB
	BRA	SCR2
SCR1	ANDA	#$F
	ANDB	#$F
	INC	TDPTR
SCR2	LDX	#SCRTAB
	ASLA
	ASLA
	ASLA
	ASLB
	ASLB
	ASLB
	LEAY	B,X	FLAV1
	LEAX	A,X	FLAV0
	LDU	TTBLP
	LDD	,X
	ADDA	TOFF0
	STD	,U
	STD	$9A*3,U
	LDD	2,X
	ADDB	,U	OFFSET
	ADDB	6,X	SKEW1
	STD	2,U
	STD	$9A*3+2,U
	ADDB	7,X	NEW OFFSET
	STB	TOFF0
	LDD	4,X
	STD	4,U
	STD	$9A*3+4,U
	LEAX	$9A*6,U	FLAV1 PTR
	LDD	,Y
	ADDA	TOFF1
	STD	,X
	STD	$9A*3,X
	LDD	2,Y
	ADDB	,X	OFFSET1
	ADDB	6,Y	SKEW1
	STD	2,X
	STD	$9A*3+2,X
	ADDB	7,Y
	STB	TOFF1
	LDD	4,Y
	STD	4,X
	STD	$9A*3+4,X
	LEAU	6,U
	CMPU	#$9A*3+TERTF0 CHECK WRAP
	BLO	SCR3
	LDU	#TERTF0
SCR3	STU	TTBLP
	RTS
*
*SCROLL RIGHT TABLE
*DH1,DATA1,DH2,DATA2,SKEW1,SKEW2
*$0770=0 SKEW, $7007= 1 SKEW
*
SCRTAB	EQU	*
	FCB	$FE,$07,$70,$FE,$07,$70,$00,$00 0000
	FCB	$FE,$07,$70,$FF,$70,$07,$00,$01 0001
	FCB	$FE,$07,$70,$00,$07,$70,$00,$00 0010
	FCB	$FE,$07,$70,$01,$70,$07,$00,$01 0011
	FCB	$FF,$70,$07,$FE,$07,$70,$01,$00 0100
	FCB	$FF,$70,$07,$FF,$70,$07,$01,$01 0101
	FCB	$FF,$70,$07,$00,$07,$70,$01,$00 0110
	FCB	$FF,$70,$07,$01,$70,$07,$01,$01 0111
	FCB	$00,$07,$70,$FE,$07,$70,$00,$00 1000
	FCB	$00,$07,$70,$FF,$70,$07,$00,$01 1001
	FCB	$00,$07,$70,$00,$07,$70,$00,$00 1010
	FCB	$00,$07,$70,$01,$70,$07,$00,$01 1011
	FCB	$01,$70,$07,$FE,$07,$70,$01,$00 1100
	FCB	$01,$70,$07,$FF,$70,$07,$01,$01 1101
	FCB	$01,$70,$07,$00,$07,$70,$01,$00 1110
	FCB	$01,$70,$07,$01,$70,$07,$01,$01 1111
*
*SCROLL LEFT TABLE
*DH1,DATA1,DH2,DATA2,SKEW1,SKEW2
*$0770= 1 SKEW, $7007 =0 SKEW
SCLTAB	EQU	*
	FCB	$01,$07,$70,$01,$07,$70,$01,$01 0000
	FCB	$01,$07,$70,$FF,$07,$70,$01,$01 0001
	FCB	$01,$07,$70,$00,$70,$07,$01,$00 0010
	FCB	$01,$07,$70,$FE,$70,$07,$01,$00 0011
	FCB	$FF,$07,$70,$01,$07,$70,$01,$01 0100
	FCB	$FF,$07,$70,$FF,$07,$70,$01,$01 0101
	FCB	$FF,$07,$70,$00,$70,$07,$01,$00 0110
	FCB	$FF,$07,$70,$FE,$70,$07,$01,$00 0111
	FCB	$00,$70,$07,$01,$07,$70,$00,$01 1000
	FCB	$00,$70,$07,$FF,$07,$70,$00,$01 1001
	FCB	$00,$70,$07,$00,$70,$07,$00,$00 1010
	FCB	$00,$70,$07,$FE,$70,$07,$00,$00 1011
	FCB	$FE,$70,$07,$01,$07,$70,$00,$01 1100
	FCB	$FE,$70,$07,$FF,$07,$70,$00,$01 1101
	FCB	$FE,$70,$07,$00,$70,$07,$00,$00 1110
	FCB	$FE,$70,$07,$FE,$70,$07,$00,$00 1111
*
* TERRAIN FLAVOR 0 DATA TABLE
*
TDATA0	FCB	$55,$40,$00,$00,$00,$00,$3F,$FF,$FF,$FF,$FC,$00,$07,$FF,$FF,$D3
	FCB	$D5,$54,$79,$C7,$55,$4D,$55,$4A,$AB,$24,$00,$0A,$A8,$00,$0A,$A8
	FCB	$00,$0A,$AB,$FF,$F5,$57,$FF,$F5,$57,$FF,$F6,$CD,$55,$AD,$69,$AA
	FCB	$AA,$AA,$AA,$AE,$21,$BA,$AA,$AA,$00,$0F,$FE,$A8,$08,$81,$01,$FF
	FCB	$80,$2A,$00,$05,$12,$51,$DB,$77,$BF,$BF,$EF,$FF,$F5,$55,$55,$55
	FCB	$54,$15,$55,$55,$F5,$55,$50,$3A,$AA,$8E,$6A,$AA,$7D,$55,$02,$EA
	FCB	$A8,$80,$3A,$AA,$8F,$FB,$7C,$A4,$76,$40,$10,$00,$03,$E2,$08,$BB
	FCB	$14,$00,$80,$D3,$FF,$FD,$E2,$FE,$D5,$5F,$A1,$A5,$6C,$07,$00,$04
	FCB	$00,$D0,$00,$0A,$08,$00,$01,$D4,$3F,$FF,$FF,$FF,$FE,$FF,$FF,$7F
	FCB	$FC,$FF,$FE,$AA,$87,$EA,$AA,$81,$F0,$AA,$AA,$AA,$8F,$AA,$AA,$83
	FCB	$C0,$7F,$F5,$55,$55,$55,$55,$55,$55,$55,$55,$40,$AC,$10,$8C,$04
	FCB	$02,$20,$03,$F7,$FF,$FE,$F9,$AA,$C2,$77,$8E,$00,$00,$00,$02,$7B
	FCB	$DF,$FF,$DF,$FE,$FF,$AA,$AA,$07,$D5,$55,$50,$7E,$AA,$AA,$AA,$A8
	FCB	$1A,$AA,$AB,$7A,$AA,$80,$0E,$AA,$AA,$FC,$8F,$E3,$A5,$35,$55,$55
	FCB	$55,$55,$55,$43,$AA,$AA,$3E,$AA,$A8,$1D,$55,$55,$54,$7E,$AA,$86
	FCB	$A5,$55,$69,$55,$55,$55,$2A,$AB,$26,$A3,$8C,$00,$00,$0F,$FF,$FF
	FCB	$55
*
* LINKY PLAYER EXPLOSION
*

LEDEX	PULS	D	GET RETURN ADDRESS
	STD	PD+6,U	SAVE IN CONVENTIONAL SPOT
	STX	PD+3,U	SAVE EXPLOSION UPPER LEFT
	TFR	X,D	POINT TO EXPLODE
	JSR	GETOB	GET A PLACEBO OBJECT
	STX	PD,U	SAVE PHONEY OBJECT.
	STB	OY16,X	SAVE THE 16 BIT Y
	LSRA		X ADDRESS IN BYTE...SHOUL HAVE 6 FRACS. IN WORLD COORDS
	RORB
	LSRA
	RORB		DONE.
	ADDD	BGL	ADD LEFT
	STD	OX16,X	OK SO FAR.
	LDD	#PHAPIC	WHICH PHONEY PICTURE??
	TST	NPLAD
	BPL	LEDEX0	FACING RIGHT...OK
	LDD	#PHBPIC	FACING LEFT
LEDEX0	STD	OPICT,X	SAVE PICTURE
	LDA	#13	13 BLOWS
	STA	PD+2,U	PLACE TO COUNT EM.
	MAKP	COLR	GET THE LASER COLOR ROLLING
	MAKP	CBOMB	AND THE BOMB COLOR
	MAKP	TIECOL	AND THE TIE COLOR
LEDEX1	LDX	PD,U	GET OBJECT
	LDA	LSEED	TRY LEFT SEED
	ANDA	#$7	3 BITS FOR RANDOM X DEFLECTION
	LDB	HSEED
	ANDB	#$03	2 BITS OF RANDOM Y DEFLECTION
	INCB		CENTER THE 4 PIXEL RANGE
	ADDD	PD+3,U	ADD UPPER LEFT
	STD	CENTMP	AND PUT AWAY
	JSR	XSVCT	GO AND DO IT SAM
	DEC	PD+2,U
	BEQ	LEDEX2
	NAP	1,LEDEX1
LEDEX2	NAP	$60,LEDEX3
LEDEX3	JMP	[PD+6,U] AND RETURN

PHAPIC	FCB	8,6
	FDB	PLAD10,PLAD10
	FDB	ON86,OFF86

PHBPIC	FCB	8,6
	FDB	PLAD20,PLAD20
	FDB	ON86,OFF86

PLAD10	FDB	$0009,$1101,$11F1
	FDB	$1119,$ADDD,$A91F
	FDB	$1910,$9AAF,$A911
	FDB	$0119,$A911,$A9F1
	FDB	$0011,$911A,$A91A
	FDB	$0001,$9F1A,$91F1
	FDB	$0000,$19F1,$111A
	FDB	$0000,$01F9,$1A19
PLAD20	FDB	$0000,$001A,$11A9
	FDB	$0000,$11A1,$A1A9
	FDB	$0000,$111F,$F1A9
	FDB	$0001,$1919,$A101
	FDB	$01A1,$9119,$A9F1
	FDB	$1111,$9AFD,$AA11
	FDB	$1011,$9ADF,$A9F1
	FDB	$1019,$1FA0,$19A0

	ORG	$3237
	FCB	$02	MATCH THE PROMS!!!!!

	END 
